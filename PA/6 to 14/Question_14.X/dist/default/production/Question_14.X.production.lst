

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Mon May 23 17:54:29 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    25                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    26                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    28  0000                     
    29                           ; Version 2.20
    30                           ; Generated 12/02/2020 GMT
    31                           ; 
    32                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC18F4550 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     _RCREG	set	4014
    64  0000                     _SPBRG	set	4015
    65  0000                     _TRISCbits	set	3988
    66  0000                     _PIR1bits	set	3998
    67  0000                     _RCSTA	set	4011
    68  0000                     _TXSTA	set	4012
    69  0000                     _TXREG	set	4013
    70                           
    71                           	psect	smallconst
    72  000800                     __psmallconst:
    73                           	callstack 0
    74  000800  00                 	db	0
    75  000801                     STR_1:
    76  000801  0A                 	db	10
    77  000802  56                 	db	86	;'V'
    78  000803  61                 	db	97	;'a'
    79  000804  6C                 	db	108	;'l'
    80  000805  75                 	db	117	;'u'
    81  000806  65                 	db	101	;'e'
    82  000807  20                 	db	32
    83  000808  6F                 	db	111	;'o'
    84  000809  66                 	db	102	;'f'
    85  00080A  20                 	db	32
    86  00080B  49                 	db	73	;'I'
    87  00080C  6E                 	db	110	;'n'
    88  00080D  70                 	db	112	;'p'
    89  00080E  75                 	db	117	;'u'
    90  00080F  74                 	db	116	;'t'
    91  000810  20                 	db	32
    92  000811  6B                 	db	107	;'k'
    93  000812  20                 	db	32
    94  000813  25                 	db	37
    95  000814  64                 	db	100	;'d'
    96  000815  00                 	db	0
    97  000816                     STR_2:
    98  000816  0A                 	db	10
    99  000817  56                 	db	86	;'V'
   100  000818  61                 	db	97	;'a'
   101  000819  6C                 	db	108	;'l'
   102  00081A  75                 	db	117	;'u'
   103  00081B  65                 	db	101	;'e'
   104  00081C  20                 	db	32
   105  00081D  32                 	db	50	;'2'
   106  00081E  6B                 	db	107	;'k'
   107  00081F  20                 	db	32
   108  000820  25                 	db	37
   109  000821  64                 	db	100	;'d'
   110  000822  00                 	db	0
   111  000823                     STR_3:
   112  000823  0A                 	db	10
   113  000824  56                 	db	86	;'V'
   114  000825  61                 	db	97	;'a'
   115  000826  6C                 	db	108	;'l'
   116  000827  75                 	db	117	;'u'
   117  000828  65                 	db	101	;'e'
   118  000829  20                 	db	32
   119  00082A  33                 	db	51	;'3'
   120  00082B  6B                 	db	107	;'k'
   121  00082C  20                 	db	32
   122  00082D  25                 	db	37
   123  00082E  64                 	db	100	;'d'
   124  00082F  00                 	db	0
   125  000830                     STR_4:
   126  000830  0A                 	db	10
   127  000831  56                 	db	86	;'V'
   128  000832  61                 	db	97	;'a'
   129  000833  6C                 	db	108	;'l'
   130  000834  75                 	db	117	;'u'
   131  000835  65                 	db	101	;'e'
   132  000836  20                 	db	32
   133  000837  34                 	db	52	;'4'
   134  000838  6B                 	db	107	;'k'
   135  000839  20                 	db	32
   136  00083A  25                 	db	37
   137  00083B  64                 	db	100	;'d'
   138  00083C  00                 	db	0
   139  00083D  00                 	db	0	; dummy byte at the end
   140  0000                     
   141                           ; #config settings
   142                           
   143                           	psect	cinit
   144  00132A                     __pcinit:
   145                           	callstack 0
   146  00132A                     start_initialization:
   147                           	callstack 0
   148  00132A                     __initialization:
   149                           	callstack 0
   150                           
   151                           ; Clear objects allocated to BANK0 (40 bytes)
   152  00132A  EE00  F060         	lfsr	0,__pbssBANK0
   153  00132E  0E28               	movlw	40
   154  001330                     clear_0:
   155  001330  6AEE               	clrf	postinc0,c
   156  001332  06E8               	decf	wreg,f,c
   157  001334  E1FD               	bnz	clear_0
   158  001336                     end_of_initialization:
   159                           	callstack 0
   160  001336                     __end_of__initialization:
   161                           	callstack 0
   162  001336  0E00               	movlw	low (__Lsmallconst shr (0+16))
   163  001338  6EF8               	movwf	tblptru,c
   164  00133A  0E08               	movlw	high __Lsmallconst
   165  00133C  6EF7               	movwf	tblptrh,c
   166  00133E  0100               	movlb	0
   167  001340  EF43  F008         	goto	_main	;jump to C main() function
   168                           
   169                           	psect	bssBANK0
   170  000060                     __pbssBANK0:
   171                           	callstack 0
   172  000060                     _nout:
   173                           	callstack 0
   174  000060                     	ds	2
   175  000062                     _width:
   176                           	callstack 0
   177  000062                     	ds	2
   178  000064                     _prec:
   179                           	callstack 0
   180  000064                     	ds	2
   181  000066                     _flags:
   182                           	callstack 0
   183  000066                     	ds	2
   184  000068                     _dbuf:
   185                           	callstack 0
   186  000068                     	ds	32
   187                           
   188                           	psect	cstackBANK0
   189  000088                     __pcstackBANK0:
   190                           	callstack 0
   191  000088                     ??_main:
   192                           
   193                           ; 1 bytes @ 0x0
   194  000088                     	ds	2
   195  00008A                     main@a:
   196                           	callstack 0
   197                           
   198                           ; 2 bytes @ 0x2
   199  00008A                     	ds	2
   200                           
   201                           	psect	cstackCOMRAM
   202  000001                     __pcstackCOMRAM:
   203                           	callstack 0
   204  000001                     ?_strlen:
   205                           	callstack 0
   206  000001                     ?___wmul:
   207                           	callstack 0
   208  000001                     ?___aodiv:
   209                           	callstack 0
   210  000001                     ?___aomod:
   211                           	callstack 0
   212  000001                     putch@c:
   213                           	callstack 0
   214  000001                     ___wmul@multiplier:
   215                           	callstack 0
   216  000001                     strlen@s:
   217                           	callstack 0
   218  000001                     ___aodiv@dividend:
   219                           	callstack 0
   220  000001                     ___aomod@dividend:
   221                           	callstack 0
   222                           
   223                           ; 8 bytes @ 0x0
   224  000001                     	ds	1
   225  000002                     fputc@c:
   226                           	callstack 0
   227                           
   228                           ; 2 bytes @ 0x1
   229  000002                     	ds	1
   230  000003                     ___wmul@multiplicand:
   231                           	callstack 0
   232  000003                     strlen@a:
   233                           	callstack 0
   234                           
   235                           ; 2 bytes @ 0x2
   236  000003                     	ds	1
   237  000004                     fputc@fp:
   238                           	callstack 0
   239                           
   240                           ; 2 bytes @ 0x3
   241  000004                     	ds	1
   242  000005                     ___wmul@product:
   243                           	callstack 0
   244                           
   245                           ; 2 bytes @ 0x4
   246  000005                     	ds	1
   247  000006                     ??_fputc:
   248                           
   249                           ; 1 bytes @ 0x5
   250  000006                     	ds	3
   251  000009                     ___aodiv@divisor:
   252                           	callstack 0
   253  000009                     ___aomod@divisor:
   254                           	callstack 0
   255                           
   256                           ; 8 bytes @ 0x8
   257  000009                     	ds	2
   258  00000B                     fputs@s:
   259                           	callstack 0
   260                           
   261                           ; 2 bytes @ 0xA
   262  00000B                     	ds	2
   263  00000D                     fputs@fp:
   264                           	callstack 0
   265                           
   266                           ; 2 bytes @ 0xC
   267  00000D                     	ds	2
   268  00000F                     fputs@c:
   269                           	callstack 0
   270                           
   271                           ; 1 bytes @ 0xE
   272  00000F                     	ds	1
   273  000010                     fputs@i:
   274                           	callstack 0
   275                           
   276                           ; 2 bytes @ 0xF
   277  000010                     	ds	1
   278  000011                     ___aodiv@counter:
   279                           	callstack 0
   280  000011                     ___aomod@counter:
   281                           	callstack 0
   282                           
   283                           ; 1 bytes @ 0x10
   284  000011                     	ds	1
   285  000012                     ?_pad:
   286                           	callstack 0
   287  000012                     ___aodiv@sign:
   288                           	callstack 0
   289  000012                     ___aomod@sign:
   290                           	callstack 0
   291  000012                     pad@fp:
   292                           	callstack 0
   293                           
   294                           ; 2 bytes @ 0x11
   295  000012                     	ds	1
   296  000013                     ?_abs:
   297                           	callstack 0
   298  000013                     abs@a:
   299                           	callstack 0
   300  000013                     ___aodiv@quotient:
   301                           	callstack 0
   302                           
   303                           ; 8 bytes @ 0x12
   304  000013                     	ds	1
   305  000014                     pad@buf:
   306                           	callstack 0
   307                           
   308                           ; 2 bytes @ 0x13
   309  000014                     	ds	1
   310  000015                     ??_abs:
   311                           
   312                           ; 1 bytes @ 0x14
   313  000015                     	ds	1
   314  000016                     pad@p:
   315                           	callstack 0
   316                           
   317                           ; 2 bytes @ 0x15
   318  000016                     	ds	2
   319  000018                     ??_pad:
   320                           
   321                           ; 1 bytes @ 0x17
   322  000018                     	ds	1
   323  000019                     pad@i:
   324                           	callstack 0
   325                           
   326                           ; 2 bytes @ 0x18
   327  000019                     	ds	2
   328  00001B                     pad@w:
   329                           	callstack 0
   330                           
   331                           ; 2 bytes @ 0x1A
   332  00001B                     	ds	2
   333  00001D                     ?_dtoa:
   334                           	callstack 0
   335  00001D                     dtoa@fp:
   336                           	callstack 0
   337                           
   338                           ; 2 bytes @ 0x1C
   339  00001D                     	ds	2
   340  00001F                     dtoa@d:
   341                           	callstack 0
   342                           
   343                           ; 8 bytes @ 0x1E
   344  00001F                     	ds	8
   345  000027                     ??_dtoa:
   346                           
   347                           ; 1 bytes @ 0x26
   348  000027                     	ds	8
   349  00002F                     _dtoa$636:
   350                           	callstack 0
   351                           
   352                           ; 2 bytes @ 0x2E
   353  00002F                     	ds	2
   354  000031                     dtoa@p:
   355                           	callstack 0
   356                           
   357                           ; 2 bytes @ 0x30
   358  000031                     	ds	2
   359  000033                     dtoa@w:
   360                           	callstack 0
   361                           
   362                           ; 2 bytes @ 0x32
   363  000033                     	ds	2
   364  000035                     dtoa@s:
   365                           	callstack 0
   366                           
   367                           ; 2 bytes @ 0x34
   368  000035                     	ds	2
   369  000037                     dtoa@n:
   370                           	callstack 0
   371                           
   372                           ; 8 bytes @ 0x36
   373  000037                     	ds	8
   374  00003F                     dtoa@i:
   375                           	callstack 0
   376                           
   377                           ; 2 bytes @ 0x3E
   378  00003F                     	ds	2
   379  000041                     ?_vfpfcnvrt:
   380                           	callstack 0
   381  000041                     vfpfcnvrt@fp:
   382                           	callstack 0
   383                           
   384                           ; 2 bytes @ 0x40
   385  000041                     	ds	2
   386  000043                     vfpfcnvrt@fmt:
   387                           	callstack 0
   388                           
   389                           ; 2 bytes @ 0x42
   390  000043                     	ds	2
   391  000045                     vfpfcnvrt@ap:
   392                           	callstack 0
   393                           
   394                           ; 2 bytes @ 0x44
   395  000045                     	ds	2
   396  000047                     ??_vfpfcnvrt:
   397                           
   398                           ; 1 bytes @ 0x46
   399  000047                     	ds	2
   400  000049                     vfpfcnvrt@ll:
   401                           	callstack 0
   402                           
   403                           ; 8 bytes @ 0x48
   404  000049                     	ds	8
   405  000051                     ?_vfprintf:
   406                           	callstack 0
   407  000051                     vfprintf@fp:
   408                           	callstack 0
   409                           
   410                           ; 2 bytes @ 0x50
   411  000051                     	ds	2
   412  000053                     vfprintf@fmt:
   413                           	callstack 0
   414                           
   415                           ; 2 bytes @ 0x52
   416  000053                     	ds	2
   417  000055                     vfprintf@ap:
   418                           	callstack 0
   419                           
   420                           ; 2 bytes @ 0x54
   421  000055                     	ds	2
   422  000057                     vfprintf@cfmt:
   423                           	callstack 0
   424                           
   425                           ; 2 bytes @ 0x56
   426  000057                     	ds	2
   427  000059                     ?_printf:
   428                           	callstack 0
   429  000059                     printf@fmt:
   430                           	callstack 0
   431                           
   432                           ; 2 bytes @ 0x58
   433  000059                     	ds	4
   434  00005D                     printf@ap:
   435                           	callstack 0
   436                           
   437                           ; 2 bytes @ 0x5C
   438  00005D                     	ds	2
   439                           
   440 ;;
   441 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   442 ;;
   443 ;; *************** function _main *****************
   444 ;; Defined at:
   445 ;;		line 19 in file "kmultiply.c"
   446 ;; Parameters:    Size  Location     Type
   447 ;;		None
   448 ;; Auto vars:     Size  Location     Type
   449 ;;  a               2    2[BANK0 ] int 
   450 ;; Return value:  Size  Location     Type
   451 ;;                  1    wreg      void 
   452 ;; Registers used:
   453 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   454 ;; Tracked objects:
   455 ;;		On entry : 0/0
   456 ;;		On exit  : 0/0
   457 ;;		Unchanged: 0/0
   458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   459 ;;      Params:         0       0       0       0       0       0       0       0       0
   460 ;;      Locals:         0       2       0       0       0       0       0       0       0
   461 ;;      Temps:          0       2       0       0       0       0       0       0       0
   462 ;;      Totals:         0       4       0       0       0       0       0       0       0
   463 ;;Total ram usage:        4 bytes
   464 ;; Hardware stack levels required when called: 8
   465 ;; This function calls:
   466 ;;		___wmul
   467 ;;		_printf
   468 ;; This function is called by:
   469 ;;		Startup code after reset
   470 ;; This function uses a non-reentrant model
   471 ;;
   472                           
   473                           	psect	text0
   474  001086                     __ptext0:
   475                           	callstack 0
   476  001086                     _main:
   477                           	callstack 23
   478  001086                     
   479                           ;kmultiply.c: 21:     TXSTA = 0x20;
   480  001086  0E20               	movlw	32
   481  001088  6EAC               	movwf	172,c	;volatile
   482                           
   483                           ;kmultiply.c: 22:     RCSTA = 0b10010000;
   484  00108A  0E90               	movlw	144
   485  00108C  6EAB               	movwf	171,c	;volatile
   486                           
   487                           ;kmultiply.c: 23:     SPBRG = 6;
   488  00108E  0E06               	movlw	6
   489  001090  6EAF               	movwf	175,c	;volatile
   490  001092                     
   491                           ;kmultiply.c: 24:     TRISCbits.TRISC7 = 1;
   492  001092  8E94               	bsf	148,7,c	;volatile
   493  001094                     l27:
   494  001094  AA9E               	btfss	158,5,c	;volatile
   495  001096  EF4F  F008         	goto	u921
   496  00109A  EF51  F008         	goto	u920
   497  00109E                     u921:
   498  00109E  EF4A  F008         	goto	l27
   499  0010A2                     u920:
   500  0010A2                     
   501                           ;kmultiply.c: 26:     a = RCREG;
   502  0010A2  CFAE F08A          	movff	4014,main@a	;volatile
   503  0010A6  0100               	movlb	0	; () banked
   504  0010A8  6B8B               	clrf	(main@a+1)& (0+255),b
   505  0010AA                     
   506                           ; BSR set to: 0
   507                           ;kmultiply.c: 27:     printf("\nValue of Input k %d",a);
   508  0010AA  0E01               	movlw	low STR_1
   509  0010AC  6E59               	movwf	printf@fmt^0,c
   510  0010AE  0E08               	movlw	high STR_1
   511  0010B0  6E5A               	movwf	(printf@fmt+1)^0,c
   512  0010B2  C08A  F05B         	movff	main@a,?_printf+2
   513  0010B6  C08B  F05C         	movff	main@a+1,?_printf+3
   514  0010BA  EC6F  F009         	call	_printf	;wreg free
   515                           
   516                           ;kmultiply.c: 28:     printf("\nValue 2k %d",a*2);
   517  0010BE  0E16               	movlw	low STR_2
   518  0010C0  6E59               	movwf	printf@fmt^0,c
   519  0010C2  0E08               	movlw	high STR_2
   520  0010C4  6E5A               	movwf	(printf@fmt+1)^0,c
   521  0010C6  90D8               	bcf	status,0,c
   522  0010C8  0100               	movlb	0	; () banked
   523  0010CA  358A               	rlcf	main@a& (0+255),w,b
   524  0010CC  6E5B               	movwf	(?_printf+2)^0,c
   525  0010CE  358B               	rlcf	(main@a+1)& (0+255),w,b
   526  0010D0  6E5C               	movwf	(?_printf+3)^0,c
   527  0010D2  EC6F  F009         	call	_printf	;wreg free
   528  0010D6                     
   529                           ;kmultiply.c: 29:     printf("\nValue 3k %d",a*3);
   530  0010D6  0E23               	movlw	low STR_3
   531  0010D8  6E59               	movwf	printf@fmt^0,c
   532  0010DA  0E08               	movlw	high STR_3
   533  0010DC  6E5A               	movwf	(printf@fmt+1)^0,c
   534  0010DE  C08A  F001         	movff	main@a,___wmul@multiplier
   535  0010E2  C08B  F002         	movff	main@a+1,___wmul@multiplier+1
   536  0010E6  0E00               	movlw	0
   537  0010E8  6E04               	movwf	(___wmul@multiplicand+1)^0,c
   538  0010EA  0E03               	movlw	3
   539  0010EC  6E03               	movwf	___wmul@multiplicand^0,c
   540  0010EE  EC82  F009         	call	___wmul	;wreg free
   541  0010F2  C001  F05B         	movff	?___wmul,?_printf+2
   542  0010F6  C002  F05C         	movff	?___wmul+1,?_printf+3
   543  0010FA  EC6F  F009         	call	_printf	;wreg free
   544  0010FE                     
   545                           ;kmultiply.c: 30:     printf("\nValue 4k %d",a*4);
   546  0010FE  0E30               	movlw	low STR_4
   547  001100  6E59               	movwf	printf@fmt^0,c
   548  001102  0E08               	movlw	high STR_4
   549  001104  6E5A               	movwf	(printf@fmt+1)^0,c
   550  001106  C08A  F088         	movff	main@a,??_main
   551  00110A  C08B  F089         	movff	main@a+1,??_main+1
   552  00110E  0100               	movlb	0	; () banked
   553  001110  90D8               	bcf	status,0,c
   554  001112  3788               	rlcf	??_main& (0+255),f,b
   555  001114  3789               	rlcf	(??_main+1)& (0+255),f,b
   556  001116  90D8               	bcf	status,0,c
   557  001118  3788               	rlcf	??_main& (0+255),f,b
   558  00111A  3789               	rlcf	(??_main+1)& (0+255),f,b
   559  00111C  C088  F05B         	movff	??_main,?_printf+2
   560  001120  C089  F05C         	movff	??_main+1,?_printf+3
   561  001124  EC6F  F009         	call	_printf	;wreg free
   562  001128  EF00  F000         	goto	start
   563  00112C                     __end_of_main:
   564                           	callstack 0
   565                           
   566 ;; *************** function _printf *****************
   567 ;; Defined at:
   568 ;;		line 5 in file "/Applications/microchip/xc8/v2.35/pic/sources/c99/common/printf.c"
   569 ;; Parameters:    Size  Location     Type
   570 ;;  fmt             2   88[COMRAM] PTR const unsigned char 
   571 ;;		 -> STR_4(13), STR_3(13), STR_2(13), STR_1(21), 
   572 ;; Auto vars:     Size  Location     Type
   573 ;;  ap              2   92[COMRAM] PTR void [1]
   574 ;;		 -> ?_printf(2), 
   575 ;;  ret             2    0        int 
   576 ;; Return value:  Size  Location     Type
   577 ;;                  2   88[COMRAM] int 
   578 ;; Registers used:
   579 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   580 ;; Tracked objects:
   581 ;;		On entry : 0/0
   582 ;;		On exit  : 0/0
   583 ;;		Unchanged: 0/0
   584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   585 ;;      Params:         4       0       0       0       0       0       0       0       0
   586 ;;      Locals:         2       0       0       0       0       0       0       0       0
   587 ;;      Temps:          0       0       0       0       0       0       0       0       0
   588 ;;      Totals:         6       0       0       0       0       0       0       0       0
   589 ;;Total ram usage:        6 bytes
   590 ;; Hardware stack levels used: 1
   591 ;; Hardware stack levels required when called: 7
   592 ;; This function calls:
   593 ;;		_vfprintf
   594 ;; This function is called by:
   595 ;;		_main
   596 ;; This function uses a non-reentrant model
   597 ;;
   598                           
   599                           	psect	text1
   600  0012DE                     __ptext1:
   601                           	callstack 0
   602  0012DE                     _printf:
   603                           	callstack 23
   604  0012DE  0E5B               	movlw	low (?_printf+2)
   605  0012E0  6E5D               	movwf	printf@ap^0,c
   606  0012E2  0E00               	movlw	high (?_printf+2)
   607  0012E4  6E5E               	movwf	(printf@ap+1)^0,c
   608  0012E6  0E00               	movlw	0
   609  0012E8  6E51               	movwf	vfprintf@fp^0,c
   610  0012EA  0E00               	movlw	0
   611  0012EC  6E52               	movwf	(vfprintf@fp+1)^0,c
   612  0012EE  C059  F053         	movff	printf@fmt,vfprintf@fmt
   613  0012F2  C05A  F054         	movff	printf@fmt+1,vfprintf@fmt+1
   614  0012F6  0E5D               	movlw	low printf@ap
   615  0012F8  6E55               	movwf	vfprintf@ap^0,c
   616  0012FA  0E00               	movlw	high printf@ap
   617  0012FC  6E56               	movwf	(vfprintf@ap+1)^0,c
   618  0012FE  ECE1  F008         	call	_vfprintf	;wreg free
   619  001302  0012               	return		;funcret
   620  001304                     __end_of_printf:
   621                           	callstack 0
   622                           
   623 ;; *************** function _vfprintf *****************
   624 ;; Defined at:
   625 ;;		line 1390 in file "/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c"
   626 ;; Parameters:    Size  Location     Type
   627 ;;  fp              2   80[COMRAM] PTR struct _IO_FILE
   628 ;;		 -> NULL(0), 
   629 ;;  fmt             2   82[COMRAM] PTR const unsigned char 
   630 ;;		 -> STR_4(13), STR_3(13), STR_2(13), STR_1(21), 
   631 ;;  ap              2   84[COMRAM] PTR PTR void 
   632 ;;		 -> printf@ap(2), 
   633 ;; Auto vars:     Size  Location     Type
   634 ;;  cfmt            2   86[COMRAM] PTR unsigned char 
   635 ;;		 -> STR_4(13), STR_3(13), STR_2(13), STR_1(21), 
   636 ;; Return value:  Size  Location     Type
   637 ;;                  2   80[COMRAM] int 
   638 ;; Registers used:
   639 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   640 ;; Tracked objects:
   641 ;;		On entry : 0/0
   642 ;;		On exit  : 0/0
   643 ;;		Unchanged: 0/0
   644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   645 ;;      Params:         6       0       0       0       0       0       0       0       0
   646 ;;      Locals:         2       0       0       0       0       0       0       0       0
   647 ;;      Temps:          0       0       0       0       0       0       0       0       0
   648 ;;      Totals:         8       0       0       0       0       0       0       0       0
   649 ;;Total ram usage:        8 bytes
   650 ;; Hardware stack levels used: 1
   651 ;; Hardware stack levels required when called: 6
   652 ;; This function calls:
   653 ;;		_vfpfcnvrt
   654 ;; This function is called by:
   655 ;;		_printf
   656 ;; This function uses a non-reentrant model
   657 ;;
   658                           
   659                           	psect	text2
   660  0011C2                     __ptext2:
   661                           	callstack 0
   662  0011C2                     _vfprintf:
   663                           	callstack 23
   664  0011C2                     
   665                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 1390: int vfprintf(F
      +                          ILE *fp, const char *fmt, va_list ap);/Applications/microchip/xc8/v2.35/pic/sources/c99/
      +                          common/doprnt.c: 1391: {;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt
      +                          .c: 1393:     char *cfmt;;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprn
      +                          t.c: 1395:     cfmt = (char *)fmt;
   666  0011C2  C053  F057         	movff	vfprintf@fmt,vfprintf@cfmt
   667  0011C6  C054  F058         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   668  0011CA                     
   669                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 1396:     nout = 0;
   670  0011CA  0E00               	movlw	0
   671  0011CC  0100               	movlb	0	; () banked
   672  0011CE  6F61               	movwf	(_nout+1)& (0+255),b
   673  0011D0  0E00               	movlw	0
   674  0011D2  6F60               	movwf	_nout& (0+255),b
   675                           
   676                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 1397:     while (*cf
      +                          mt) {
   677  0011D4  EFFF  F008         	goto	l1348
   678  0011D8                     l1346:
   679                           
   680                           ; BSR set to: 0
   681                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 1398:         nout +
      +                          = vfpfcnvrt(fp, &cfmt, ap);
   682  0011D8  C051  F041         	movff	vfprintf@fp,vfpfcnvrt@fp
   683  0011DC  C052  F042         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   684  0011E0  0E57               	movlw	low vfprintf@cfmt
   685  0011E2  6E43               	movwf	vfpfcnvrt@fmt^0,c
   686  0011E4  0E00               	movlw	high vfprintf@cfmt
   687  0011E6  6E44               	movwf	(vfpfcnvrt@fmt+1)^0,c
   688  0011E8  C055  F045         	movff	vfprintf@ap,vfpfcnvrt@ap
   689  0011EC  C056  F046         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   690  0011F0  EC90  F005         	call	_vfpfcnvrt	;wreg free
   691  0011F4  5041               	movf	?_vfpfcnvrt^0,w,c
   692  0011F6  0100               	movlb	0	; () banked
   693  0011F8  2760               	addwf	_nout& (0+255),f,b
   694  0011FA  5042               	movf	(?_vfpfcnvrt+1)^0,w,c
   695  0011FC  2361               	addwfc	(_nout+1)& (0+255),f,b
   696  0011FE                     l1348:
   697                           
   698                           ; BSR set to: 0
   699                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 1397:     while (*cf
      +                          mt) {
   700  0011FE  C057  FFF6         	movff	vfprintf@cfmt,tblptrl
   701  001202  C058  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   702  001206                     	if	0	;tblptru may be non-zero
   703  001206                     	endif
   704  001206                     	if	0	;tblptru may be non-zero
   705  001206                     	endif
   706  001206  0008               	tblrd		*
   707  001208  50F5               	movf	tablat,w,c
   708  00120A  0900               	iorlw	0
   709  00120C  A4D8               	btfss	status,2,c
   710  00120E  EF0B  F009         	goto	u911
   711  001212  EF0D  F009         	goto	u910
   712  001216                     u911:
   713  001216  EFEC  F008         	goto	l1346
   714  00121A                     u910:
   715  00121A                     
   716                           ; BSR set to: 0
   717                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 1400:     return nou
      +                          t;
   718  00121A  C060  F051         	movff	_nout,?_vfprintf
   719  00121E  C061  F052         	movff	_nout+1,?_vfprintf+1
   720  001222                     
   721                           ; BSR set to: 0
   722  001222  0012               	return		;funcret
   723  001224                     __end_of_vfprintf:
   724                           	callstack 0
   725                           
   726 ;; *************** function _vfpfcnvrt *****************
   727 ;; Defined at:
   728 ;;		line 692 in file "/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c"
   729 ;; Parameters:    Size  Location     Type
   730 ;;  fp              2   64[COMRAM] PTR struct _IO_FILE
   731 ;;		 -> NULL(0), 
   732 ;;  fmt             2   66[COMRAM] PTR PTR unsigned char 
   733 ;;		 -> vfprintf@cfmt(2), 
   734 ;;  ap              2   68[COMRAM] PTR PTR void 
   735 ;;		 -> printf@ap(2), 
   736 ;; Auto vars:     Size  Location     Type
   737 ;;  ll              8   72[COMRAM] long long 
   738 ;;  llu             8    0        unsigned long long 
   739 ;;  f               4    0        unsigned long long 
   740 ;;  vp              3    0        PTR void 
   741 ;;  ct              3    0        unsigned char [3]
   742 ;;  cp              3    0        PTR unsigned char 
   743 ;;  i               2    0        int 
   744 ;;  done            2    0        int 
   745 ;;  c               1    0        unsigned char 
   746 ;; Return value:  Size  Location     Type
   747 ;;                  2   64[COMRAM] int 
   748 ;; Registers used:
   749 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   750 ;; Tracked objects:
   751 ;;		On entry : 0/0
   752 ;;		On exit  : 0/0
   753 ;;		Unchanged: 0/0
   754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   755 ;;      Params:         6       0       0       0       0       0       0       0       0
   756 ;;      Locals:         8       0       0       0       0       0       0       0       0
   757 ;;      Temps:          2       0       0       0       0       0       0       0       0
   758 ;;      Totals:        16       0       0       0       0       0       0       0       0
   759 ;;Total ram usage:       16 bytes
   760 ;; Hardware stack levels used: 1
   761 ;; Hardware stack levels required when called: 5
   762 ;; This function calls:
   763 ;;		_dtoa
   764 ;;		_fputc
   765 ;; This function is called by:
   766 ;;		_vfprintf
   767 ;; This function uses a non-reentrant model
   768 ;;
   769                           
   770                           	psect	text3
   771  000B20                     __ptext3:
   772                           	callstack 0
   773  000B20                     _vfpfcnvrt:
   774                           	callstack 23
   775  000B20                     
   776                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 692: static int vfpf
      +                          cnvrt(FILE *fp, char *fmt[], va_list ap);/Applications/microchip/xc8/v2.35/pic/sources/c
      +                          99/common/doprnt.c: 693: {;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/dopr
      +                          nt.c: 694:     char c, *cp, ct[3];;/Applications/microchip/xc8/v2.35/pic/sources/c99/com
      +                          mon/doprnt.c: 695:     int done, i;;/Applications/microchip/xc8/v2.35/pic/sources/c99/co
      +                          mmon/doprnt.c: 696:     long long ll;;/Applications/microchip/xc8/v2.35/pic/sources/c99/
      +                          common/doprnt.c: 697:     unsigned long long llu;
   777  000B20  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   778  000B24  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   779  000B28  CFDE FFF6          	movff	postinc2,tblptrl
   780  000B2C  CFDD FFF7          	movff	postdec2,tblptrh
   781  000B30                     	if	0	;tblptru may be non-zero
   782  000B30                     	endif
   783  000B30                     	if	0	;tblptru may be non-zero
   784  000B30                     	endif
   785  000B30  0008               	tblrd		*
   786  000B32  50F5               	movf	tablat,w,c
   787  000B34  0A25               	xorlw	37
   788  000B36  A4D8               	btfss	status,2,c
   789  000B38  EFA0  F005         	goto	u871
   790  000B3C  EFA2  F005         	goto	u870
   791  000B40                     u871:
   792  000B40  EF4E  F006         	goto	l1334
   793  000B44                     u870:
   794  000B44                     
   795                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 703:         ++*fmt;
   796  000B44  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   797  000B48  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   798  000B4C  2ADE               	incf	postinc2,f,c
   799  000B4E  0E00               	movlw	0
   800  000B50  22DD               	addwfc	postdec2,f,c
   801  000B52                     
   802                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 705:         flags =
      +                           width = 0;
   803  000B52  0E00               	movlw	0
   804  000B54  0100               	movlb	0	; () banked
   805  000B56  6F63               	movwf	(_width+1)& (0+255),b
   806  000B58  0E00               	movlw	0
   807  000B5A  6F62               	movwf	_width& (0+255),b
   808  000B5C  C062  F066         	movff	_width,_flags
   809  000B60  C063  F067         	movff	_width+1,_flags+1
   810  000B64                     
   811                           ; BSR set to: 0
   812                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 706:         prec = 
      +                          -1;
   813  000B64  6964               	setf	_prec& (0+255),b
   814  000B66  6965               	setf	(_prec+1)& (0+255),b
   815  000B68                     
   816                           ; BSR set to: 0
   817                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 847:         if ((*f
      +                          mt[0] == 'd') || (*fmt[0] == 'i')) {
   818  000B68  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   819  000B6C  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   820  000B70  CFDE FFF6          	movff	postinc2,tblptrl
   821  000B74  CFDD FFF7          	movff	postdec2,tblptrh
   822  000B78                     	if	0	;tblptru may be non-zero
   823  000B78                     	endif
   824  000B78                     	if	0	;tblptru may be non-zero
   825  000B78                     	endif
   826  000B78  0008               	tblrd		*
   827  000B7A  50F5               	movf	tablat,w,c
   828  000B7C  0A64               	xorlw	100
   829  000B7E  B4D8               	btfsc	status,2,c
   830  000B80  EFC4  F005         	goto	u881
   831  000B84  EFC6  F005         	goto	u880
   832  000B88                     u881:
   833  000B88  EFD8  F005         	goto	l1312
   834  000B8C                     u880:
   835  000B8C                     
   836                           ; BSR set to: 0
   837  000B8C  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   838  000B90  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   839  000B94  CFDE FFF6          	movff	postinc2,tblptrl
   840  000B98  CFDD FFF7          	movff	postdec2,tblptrh
   841  000B9C                     	if	0	;tblptru may be non-zero
   842  000B9C                     	endif
   843  000B9C                     	if	0	;tblptru may be non-zero
   844  000B9C                     	endif
   845  000B9C  0008               	tblrd		*
   846  000B9E  50F5               	movf	tablat,w,c
   847  000BA0  0A69               	xorlw	105
   848  000BA2  A4D8               	btfss	status,2,c
   849  000BA4  EFD6  F005         	goto	u891
   850  000BA8  EFD8  F005         	goto	u890
   851  000BAC                     u891:
   852  000BAC  EF18  F006         	goto	l1318
   853  000BB0                     u890:
   854  000BB0                     l1312:
   855                           
   856                           ; BSR set to: 0
   857                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 849:             ++*
      +                          fmt;
   858  000BB0  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   859  000BB4  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   860  000BB8  2ADE               	incf	postinc2,f,c
   861  000BBA  0E00               	movlw	0
   862  000BBC  22DD               	addwfc	postdec2,f,c
   863                           
   864                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 850:             ll 
      +                          = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
   865  000BBE  C045  FFD9         	movff	vfpfcnvrt@ap,fsr2l
   866  000BC2  C046  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
   867  000BC6  CFDF F047          	movff	indf2,??_vfpfcnvrt
   868  000BCA  0E02               	movlw	2
   869  000BCC  26DE               	addwf	postinc2,f,c
   870  000BCE  CFDF F048          	movff	indf2,??_vfpfcnvrt+1
   871  000BD2  0E00               	movlw	0
   872  000BD4  22DD               	addwfc	postdec2,f,c
   873  000BD6  C047  FFD9         	movff	??_vfpfcnvrt,fsr2l
   874  000BDA  C048  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
   875  000BDE  CFDE F049          	movff	postinc2,vfpfcnvrt@ll
   876  000BE2  CFDD F04A          	movff	postdec2,vfpfcnvrt@ll+1
   877  000BE6  0E00               	movlw	0
   878  000BE8  BE4A               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
   879  000BEA  0EFF               	movlw	-1
   880  000BEC  6E4B               	movwf	(vfpfcnvrt@ll+2)^0,c
   881  000BEE  6E4C               	movwf	(vfpfcnvrt@ll+3)^0,c
   882  000BF0  6E4D               	movwf	(vfpfcnvrt@ll+4)^0,c
   883  000BF2  6E4E               	movwf	(vfpfcnvrt@ll+5)^0,c
   884  000BF4  6E4F               	movwf	(vfpfcnvrt@ll+6)^0,c
   885  000BF6  6E50               	movwf	(vfpfcnvrt@ll+7)^0,c
   886  000BF8                     
   887                           ; BSR set to: 0
   888                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 852:             ret
      +                          urn dtoa(fp, ll);
   889  000BF8  C041  F01D         	movff	vfpfcnvrt@fp,dtoa@fp
   890  000BFC  C042  F01E         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
   891  000C00  C049  F01F         	movff	vfpfcnvrt@ll,dtoa@d
   892  000C04  C04A  F020         	movff	vfpfcnvrt@ll+1,dtoa@d+1
   893  000C08  C04B  F021         	movff	vfpfcnvrt@ll+2,dtoa@d+2
   894  000C0C  C04C  F022         	movff	vfpfcnvrt@ll+3,dtoa@d+3
   895  000C10  C04D  F023         	movff	vfpfcnvrt@ll+4,dtoa@d+4
   896  000C14  C04E  F024         	movff	vfpfcnvrt@ll+5,dtoa@d+5
   897  000C18  C04F  F025         	movff	vfpfcnvrt@ll+6,dtoa@d+6
   898  000C1C  C050  F026         	movff	vfpfcnvrt@ll+7,dtoa@d+7
   899  000C20  EC1F  F004         	call	_dtoa	;wreg free
   900  000C24  C01D  F041         	movff	?_dtoa,?_vfpfcnvrt
   901  000C28  C01E  F042         	movff	?_dtoa+1,?_vfpfcnvrt+1
   902  000C2C  EF69  F006         	goto	l776
   903  000C30                     l1318:
   904                           
   905                           ; BSR set to: 0
   906                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 1372:         if ((*
      +                          fmt)[0] == '%') {
   907  000C30  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   908  000C34  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   909  000C38  CFDE FFF6          	movff	postinc2,tblptrl
   910  000C3C  CFDD FFF7          	movff	postdec2,tblptrh
   911  000C40                     	if	0	;tblptru may be non-zero
   912  000C40                     	endif
   913  000C40                     	if	0	;tblptru may be non-zero
   914  000C40                     	endif
   915  000C40  0008               	tblrd		*
   916  000C42  50F5               	movf	tablat,w,c
   917  000C44  0A25               	xorlw	37
   918  000C46  A4D8               	btfss	status,2,c
   919  000C48  EF28  F006         	goto	u901
   920  000C4C  EF2A  F006         	goto	u900
   921  000C50                     u901:
   922  000C50  EF41  F006         	goto	l1328
   923  000C54                     u900:
   924  000C54                     
   925                           ; BSR set to: 0
   926                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 1373:             ++
      +                          *fmt;
   927  000C54  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   928  000C58  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   929  000C5C  2ADE               	incf	postinc2,f,c
   930  000C5E  0E00               	movlw	0
   931  000C60  22DD               	addwfc	postdec2,f,c
   932  000C62                     
   933                           ; BSR set to: 0
   934                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 1374:             fp
      +                          utc((int)'%', fp);
   935  000C62  0E00               	movlw	0
   936  000C64  6E03               	movwf	(fputc@c+1)^0,c
   937  000C66  0E25               	movlw	37
   938  000C68  6E02               	movwf	fputc@c^0,c
   939  000C6A  C041  F004         	movff	vfpfcnvrt@fp,fputc@fp
   940  000C6E  C042  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
   941  000C72  EC96  F008         	call	_fputc	;wreg free
   942  000C76                     l1324:
   943                           
   944                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 1375:             re
      +                          turn 1;
   945  000C76  0E00               	movlw	0
   946  000C78  6E42               	movwf	(?_vfpfcnvrt+1)^0,c
   947  000C7A  0E01               	movlw	1
   948  000C7C  6E41               	movwf	?_vfpfcnvrt^0,c
   949  000C7E  EF69  F006         	goto	l776
   950  000C82                     l1328:
   951                           
   952                           ; BSR set to: 0
   953                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 1379:         ++*fmt
      +                          ;
   954  000C82  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   955  000C86  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   956  000C8A  2ADE               	incf	postinc2,f,c
   957  000C8C  0E00               	movlw	0
   958  000C8E  22DD               	addwfc	postdec2,f,c
   959  000C90                     
   960                           ; BSR set to: 0
   961                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 1380:         return
      +                           0;
   962  000C90  0E00               	movlw	0
   963  000C92  6E42               	movwf	(?_vfpfcnvrt+1)^0,c
   964  000C94  0E00               	movlw	0
   965  000C96  6E41               	movwf	?_vfpfcnvrt^0,c
   966  000C98  EF69  F006         	goto	l776
   967  000C9C                     l1334:
   968                           
   969                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 1384:     fputc((int
      +                          )(*fmt)[0], fp);
   970  000C9C  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   971  000CA0  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   972  000CA4  CFDE FFF6          	movff	postinc2,tblptrl
   973  000CA8  CFDD FFF7          	movff	postdec2,tblptrh
   974  000CAC                     	if	0	;tblptru may be non-zero
   975  000CAC                     	endif
   976  000CAC                     	if	0	;tblptru may be non-zero
   977  000CAC                     	endif
   978  000CAC  0008               	tblrd		*
   979  000CAE  50F5               	movf	tablat,w,c
   980  000CB0  6E02               	movwf	fputc@c^0,c
   981  000CB2  6A03               	clrf	(fputc@c+1)^0,c
   982  000CB4  C041  F004         	movff	vfpfcnvrt@fp,fputc@fp
   983  000CB8  C042  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
   984  000CBC  EC96  F008         	call	_fputc	;wreg free
   985  000CC0                     
   986                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 1385:     ++*fmt;
   987  000CC0  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   988  000CC4  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   989  000CC8  2ADE               	incf	postinc2,f,c
   990  000CCA  0E00               	movlw	0
   991  000CCC  22DD               	addwfc	postdec2,f,c
   992  000CCE  EF3B  F006         	goto	l1324
   993  000CD2                     l776:
   994  000CD2  0012               	return		;funcret
   995  000CD4                     __end_of_vfpfcnvrt:
   996                           	callstack 0
   997                           
   998 ;; *************** function _dtoa *****************
   999 ;; Defined at:
  1000 ;;		line 287 in file "/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c"
  1001 ;; Parameters:    Size  Location     Type
  1002 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  1003 ;;		 -> NULL(0), 
  1004 ;;  d               8   30[COMRAM] long long 
  1005 ;; Auto vars:     Size  Location     Type
  1006 ;;  n               8   54[COMRAM] long long 
  1007 ;;  i               2   62[COMRAM] int 
  1008 ;;  s               2   52[COMRAM] int 
  1009 ;;  w               2   50[COMRAM] int 
  1010 ;;  p               2   48[COMRAM] int 
  1011 ;; Return value:  Size  Location     Type
  1012 ;;                  2   28[COMRAM] int 
  1013 ;; Registers used:
  1014 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1015 ;; Tracked objects:
  1016 ;;		On entry : 0/0
  1017 ;;		On exit  : 0/0
  1018 ;;		Unchanged: 0/0
  1019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1020 ;;      Params:        10       0       0       0       0       0       0       0       0
  1021 ;;      Locals:        18       0       0       0       0       0       0       0       0
  1022 ;;      Temps:          8       0       0       0       0       0       0       0       0
  1023 ;;      Totals:        36       0       0       0       0       0       0       0       0
  1024 ;;Total ram usage:       36 bytes
  1025 ;; Hardware stack levels used: 1
  1026 ;; Hardware stack levels required when called: 4
  1027 ;; This function calls:
  1028 ;;		___aodiv
  1029 ;;		___aomod
  1030 ;;		_abs
  1031 ;;		_pad
  1032 ;; This function is called by:
  1033 ;;		_vfpfcnvrt
  1034 ;; This function uses a non-reentrant model
  1035 ;;
  1036                           
  1037                           	psect	text4
  1038  00083E                     __ptext4:
  1039                           	callstack 0
  1040  00083E                     _dtoa:
  1041                           	callstack 23
  1042  00083E                     
  1043                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 287: static int dtoa
      +                          (FILE *fp, long long d);/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.
      +                          c: 288: {;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 289:     in
      +                          t i, p, s, w;;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 290:   
      +                            long long n;;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 293:  
      +                             n = d;
  1044  00083E  C01F  F037         	movff	dtoa@d,dtoa@n
  1045  000842  C020  F038         	movff	dtoa@d+1,dtoa@n+1
  1046  000846  C021  F039         	movff	dtoa@d+2,dtoa@n+2
  1047  00084A  C022  F03A         	movff	dtoa@d+3,dtoa@n+3
  1048  00084E  C023  F03B         	movff	dtoa@d+4,dtoa@n+4
  1049  000852  C024  F03C         	movff	dtoa@d+5,dtoa@n+5
  1050  000856  C025  F03D         	movff	dtoa@d+6,dtoa@n+6
  1051  00085A  C026  F03E         	movff	dtoa@d+7,dtoa@n+7
  1052  00085E                     
  1053                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 294:     s = n < 0 ?
      +                           1 : 0;
  1054  00085E  BE3E               	btfsc	(dtoa@n+7)^0,7,c
  1055  000860  EF34  F004         	goto	u721
  1056  000864  EF37  F004         	goto	u720
  1057  000868                     u721:
  1058  000868  0E01               	movlw	1
  1059  00086A  EF38  F004         	goto	u730
  1060  00086E                     u720:
  1061  00086E  0E00               	movlw	0
  1062  000870                     u730:
  1063  000870  6E35               	movwf	dtoa@s^0,c
  1064  000872  6A36               	clrf	(dtoa@s+1)^0,c
  1065                           
  1066                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 295:     if (s) {
  1067  000874  5035               	movf	dtoa@s^0,w,c
  1068  000876  1036               	iorwf	(dtoa@s+1)^0,w,c
  1069  000878  B4D8               	btfsc	status,2,c
  1070  00087A  EF41  F004         	goto	u741
  1071  00087E  EF43  F004         	goto	u740
  1072  000882                     u741:
  1073  000882  EF53  F004         	goto	l1244
  1074  000886                     u740:
  1075  000886                     
  1076                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 296:         n = -n;
  1077  000886  1E3E               	comf	(dtoa@n+7)^0,f,c
  1078  000888  1E3D               	comf	(dtoa@n+6)^0,f,c
  1079  00088A  1E3C               	comf	(dtoa@n+5)^0,f,c
  1080  00088C  1E3B               	comf	(dtoa@n+4)^0,f,c
  1081  00088E  1E3A               	comf	(dtoa@n+3)^0,f,c
  1082  000890  1E39               	comf	(dtoa@n+2)^0,f,c
  1083  000892  1E38               	comf	(dtoa@n+1)^0,f,c
  1084  000894  6C37               	negf	dtoa@n^0,c
  1085  000896  0E00               	movlw	0
  1086  000898  2238               	addwfc	(dtoa@n+1)^0,f,c
  1087  00089A  2239               	addwfc	(dtoa@n+2)^0,f,c
  1088  00089C  223A               	addwfc	(dtoa@n+3)^0,f,c
  1089  00089E  223B               	addwfc	(dtoa@n+4)^0,f,c
  1090  0008A0  223C               	addwfc	(dtoa@n+5)^0,f,c
  1091  0008A2  223D               	addwfc	(dtoa@n+6)^0,f,c
  1092  0008A4  223E               	addwfc	(dtoa@n+7)^0,f,c
  1093  0008A6                     l1244:
  1094                           
  1095                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 300:     if (!(prec 
      +                          < 0)) {
  1096  0008A6  0100               	movlb	0	; () banked
  1097  0008A8  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1098  0008AA  EF59  F004         	goto	u751
  1099  0008AE  EF5B  F004         	goto	u750
  1100  0008B2                     u751:
  1101  0008B2  EF5C  F004         	goto	l1248
  1102  0008B6                     u750:
  1103  0008B6                     
  1104                           ; BSR set to: 0
  1105                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 301:         flags &
      +                          = ~(1 << 1);
  1106  0008B6  9366               	bcf	_flags& (0+255),1,b
  1107  0008B8                     l1248:
  1108                           
  1109                           ; BSR set to: 0
  1110                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 303:     p = (0 < pr
      +                          ec) ? prec : 1;
  1111  0008B8  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1112  0008BA  EF69  F004         	goto	u760
  1113  0008BE  5165               	movf	(_prec+1)& (0+255),w,b
  1114  0008C0  E106               	bnz	u761
  1115  0008C2  0564               	decf	_prec& (0+255),w,b
  1116  0008C4  B0D8               	btfsc	status,0,c
  1117  0008C6  EF67  F004         	goto	u761
  1118  0008CA  EF69  F004         	goto	u760
  1119  0008CE                     u761:
  1120  0008CE  EF6F  F004         	goto	l749
  1121  0008D2                     u760:
  1122  0008D2                     
  1123                           ; BSR set to: 0
  1124  0008D2  0E00               	movlw	0
  1125  0008D4  6E32               	movwf	(dtoa@p+1)^0,c
  1126  0008D6  0E01               	movlw	1
  1127  0008D8  6E31               	movwf	dtoa@p^0,c
  1128  0008DA  EF73  F004         	goto	l751
  1129  0008DE                     l749:
  1130                           
  1131                           ; BSR set to: 0
  1132  0008DE  C064  F031         	movff	_prec,dtoa@p
  1133  0008E2  C065  F032         	movff	_prec+1,dtoa@p+1
  1134  0008E6                     l751:
  1135                           
  1136                           ; BSR set to: 0
  1137                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 304:     w = width;
  1138  0008E6  C062  F033         	movff	_width,dtoa@w
  1139  0008EA  C063  F034         	movff	_width+1,dtoa@w+1
  1140  0008EE                     
  1141                           ; BSR set to: 0
  1142                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 305:     if (s || (f
      +                          lags & (1 << 2))) {
  1143  0008EE  5035               	movf	dtoa@s^0,w,c
  1144  0008F0  1036               	iorwf	(dtoa@s+1)^0,w,c
  1145  0008F2  A4D8               	btfss	status,2,c
  1146  0008F4  EF7E  F004         	goto	u771
  1147  0008F8  EF80  F004         	goto	u770
  1148  0008FC                     u771:
  1149  0008FC  EF87  F004         	goto	l1256
  1150  000900                     u770:
  1151  000900                     
  1152                           ; BSR set to: 0
  1153  000900  A566               	btfss	_flags& (0+255),2,b
  1154  000902  EF85  F004         	goto	u781
  1155  000906  EF87  F004         	goto	u780
  1156  00090A                     u781:
  1157  00090A  EF8A  F004         	goto	l1258
  1158  00090E                     u780:
  1159  00090E                     l1256:
  1160                           
  1161                           ; BSR set to: 0
  1162                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 306:         --w;
  1163  00090E  0633               	decf	dtoa@w^0,f,c
  1164  000910  A0D8               	btfss	status,0,c
  1165  000912  0634               	decf	(dtoa@w+1)^0,f,c
  1166  000914                     l1258:
  1167                           
  1168                           ; BSR set to: 0
  1169                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 310:     i = sizeof(
      +                          dbuf) - 1;
  1170  000914  0E00               	movlw	0
  1171  000916  6E40               	movwf	(dtoa@i+1)^0,c
  1172  000918  0E1F               	movlw	31
  1173  00091A  6E3F               	movwf	dtoa@i^0,c
  1174  00091C                     
  1175                           ; BSR set to: 0
  1176                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 311:     dbuf[i] = '
      +                          \0';
  1177  00091C  0E00               	movlw	0
  1178  00091E  6F87               	movwf	(_dbuf+31)& (0+255),b
  1179                           
  1180                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 312:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1181  000920  EF0E  F005         	goto	l1272
  1182  000924                     l1262:
  1183                           
  1184                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 313:         --i;
  1185  000924  063F               	decf	dtoa@i^0,f,c
  1186  000926  A0D8               	btfss	status,0,c
  1187  000928  0640               	decf	(dtoa@i+1)^0,f,c
  1188  00092A                     
  1189                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 314:         dbuf[i]
      +                           = (char)((int)'0' + abs(n % 10));
  1190  00092A  0E68               	movlw	low _dbuf
  1191  00092C  243F               	addwf	dtoa@i^0,w,c
  1192  00092E  6ED9               	movwf	fsr2l,c
  1193  000930  0E00               	movlw	high _dbuf
  1194  000932  2040               	addwfc	(dtoa@i+1)^0,w,c
  1195  000934  6EDA               	movwf	fsr2h,c
  1196  000936  C037  F001         	movff	dtoa@n,___aomod@dividend
  1197  00093A  C038  F002         	movff	dtoa@n+1,___aomod@dividend+1
  1198  00093E  C039  F003         	movff	dtoa@n+2,___aomod@dividend+2
  1199  000942  C03A  F004         	movff	dtoa@n+3,___aomod@dividend+3
  1200  000946  C03B  F005         	movff	dtoa@n+4,___aomod@dividend+4
  1201  00094A  C03C  F006         	movff	dtoa@n+5,___aomod@dividend+5
  1202  00094E  C03D  F007         	movff	dtoa@n+6,___aomod@dividend+6
  1203  000952  C03E  F008         	movff	dtoa@n+7,___aomod@dividend+7
  1204  000956  0E0A               	movlw	10
  1205  000958  6E09               	movwf	___aomod@divisor^0,c
  1206  00095A  0E00               	movlw	0
  1207  00095C  6E0A               	movwf	(___aomod@divisor+1)^0,c
  1208  00095E  0E00               	movlw	0
  1209  000960  6E0B               	movwf	(___aomod@divisor+2)^0,c
  1210  000962  0E00               	movlw	0
  1211  000964  6E0C               	movwf	(___aomod@divisor+3)^0,c
  1212  000966  0E00               	movlw	0
  1213  000968  6E0D               	movwf	(___aomod@divisor+4)^0,c
  1214  00096A  0E00               	movlw	0
  1215  00096C  6E0E               	movwf	(___aomod@divisor+5)^0,c
  1216  00096E  0E00               	movlw	0
  1217  000970  6E0F               	movwf	(___aomod@divisor+6)^0,c
  1218  000972  0E00               	movlw	0
  1219  000974  6E10               	movwf	(___aomod@divisor+7)^0,c
  1220  000976  EC2E  F007         	call	___aomod	;wreg free
  1221  00097A  C001  F027         	movff	?___aomod,??_dtoa
  1222  00097E  C002  F028         	movff	?___aomod+1,??_dtoa+1
  1223  000982  C003  F029         	movff	?___aomod+2,??_dtoa+2
  1224  000986  C004  F02A         	movff	?___aomod+3,??_dtoa+3
  1225  00098A  C005  F02B         	movff	?___aomod+4,??_dtoa+4
  1226  00098E  C006  F02C         	movff	?___aomod+5,??_dtoa+5
  1227  000992  C007  F02D         	movff	?___aomod+6,??_dtoa+6
  1228  000996  C008  F02E         	movff	?___aomod+7,??_dtoa+7
  1229  00099A  C027  F013         	movff	??_dtoa,abs@a
  1230  00099E  C029  F014         	movff	??_dtoa+2,abs@a+1
  1231  0009A2  EC34  F009         	call	_abs	;wreg free
  1232  0009A6  5013               	movf	?_abs^0,w,c
  1233  0009A8  0F30               	addlw	48
  1234  0009AA  6EDF               	movwf	indf2,c
  1235  0009AC                     
  1236                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 315:         --p;
  1237  0009AC  0631               	decf	dtoa@p^0,f,c
  1238  0009AE  A0D8               	btfss	status,0,c
  1239  0009B0  0632               	decf	(dtoa@p+1)^0,f,c
  1240  0009B2                     
  1241                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 316:         --w;
  1242  0009B2  0633               	decf	dtoa@w^0,f,c
  1243  0009B4  A0D8               	btfss	status,0,c
  1244  0009B6  0634               	decf	(dtoa@w+1)^0,f,c
  1245  0009B8                     
  1246                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 317:         n = n /
      +                           10;
  1247  0009B8  C037  F001         	movff	dtoa@n,___aodiv@dividend
  1248  0009BC  C038  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  1249  0009C0  C039  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  1250  0009C4  C03A  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  1251  0009C8  C03B  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  1252  0009CC  C03C  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  1253  0009D0  C03D  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  1254  0009D4  C03E  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  1255  0009D8  0E0A               	movlw	10
  1256  0009DA  6E09               	movwf	___aodiv@divisor^0,c
  1257  0009DC  0E00               	movlw	0
  1258  0009DE  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  1259  0009E0  0E00               	movlw	0
  1260  0009E2  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  1261  0009E4  0E00               	movlw	0
  1262  0009E6  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  1263  0009E8  0E00               	movlw	0
  1264  0009EA  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  1265  0009EC  0E00               	movlw	0
  1266  0009EE  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  1267  0009F0  0E00               	movlw	0
  1268  0009F2  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  1269  0009F4  0E00               	movlw	0
  1270  0009F6  6E10               	movwf	(___aodiv@divisor+7)^0,c
  1271  0009F8  EC6A  F006         	call	___aodiv	;wreg free
  1272  0009FC  C001  F037         	movff	?___aodiv,dtoa@n
  1273  000A00  C002  F038         	movff	?___aodiv+1,dtoa@n+1
  1274  000A04  C003  F039         	movff	?___aodiv+2,dtoa@n+2
  1275  000A08  C004  F03A         	movff	?___aodiv+3,dtoa@n+3
  1276  000A0C  C005  F03B         	movff	?___aodiv+4,dtoa@n+4
  1277  000A10  C006  F03C         	movff	?___aodiv+5,dtoa@n+5
  1278  000A14  C007  F03D         	movff	?___aodiv+6,dtoa@n+6
  1279  000A18  C008  F03E         	movff	?___aodiv+7,dtoa@n+7
  1280  000A1C                     l1272:
  1281                           
  1282                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 312:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1283  000A1C  BE40               	btfsc	(dtoa@i+1)^0,7,c
  1284  000A1E  EF19  F005         	goto	u791
  1285  000A22  5040               	movf	(dtoa@i+1)^0,w,c
  1286  000A24  E108               	bnz	u790
  1287  000A26  043F               	decf	dtoa@i^0,w,c
  1288  000A28  A0D8               	btfss	status,0,c
  1289  000A2A  EF19  F005         	goto	u791
  1290  000A2E  EF1B  F005         	goto	u790
  1291  000A32                     u791:
  1292  000A32  EF4C  F005         	goto	l1282
  1293  000A36                     u790:
  1294  000A36  5037               	movf	dtoa@n^0,w,c
  1295  000A38  1038               	iorwf	(dtoa@n+1)^0,w,c
  1296  000A3A  1039               	iorwf	(dtoa@n+2)^0,w,c
  1297  000A3C  103A               	iorwf	(dtoa@n+3)^0,w,c
  1298  000A3E  103B               	iorwf	(dtoa@n+4)^0,w,c
  1299  000A40  103C               	iorwf	(dtoa@n+5)^0,w,c
  1300  000A42  103D               	iorwf	(dtoa@n+6)^0,w,c
  1301  000A44  103E               	iorwf	(dtoa@n+7)^0,w,c
  1302  000A46  A4D8               	btfss	status,2,c
  1303  000A48  EF28  F005         	goto	u801
  1304  000A4C  EF2A  F005         	goto	u800
  1305  000A50                     u801:
  1306  000A50  EF92  F004         	goto	l1262
  1307  000A54                     u800:
  1308  000A54  BE32               	btfsc	(dtoa@p+1)^0,7,c
  1309  000A56  EF37  F005         	goto	u810
  1310  000A5A  5032               	movf	(dtoa@p+1)^0,w,c
  1311  000A5C  E106               	bnz	u811
  1312  000A5E  0431               	decf	dtoa@p^0,w,c
  1313  000A60  B0D8               	btfsc	status,0,c
  1314  000A62  EF35  F005         	goto	u811
  1315  000A66  EF37  F005         	goto	u810
  1316  000A6A                     u811:
  1317  000A6A  EF92  F004         	goto	l1262
  1318  000A6E                     u810:
  1319  000A6E  BE34               	btfsc	(dtoa@w+1)^0,7,c
  1320  000A70  EF42  F005         	goto	u821
  1321  000A74  5034               	movf	(dtoa@w+1)^0,w,c
  1322  000A76  E108               	bnz	u820
  1323  000A78  0433               	decf	dtoa@w^0,w,c
  1324  000A7A  A0D8               	btfss	status,0,c
  1325  000A7C  EF42  F005         	goto	u821
  1326  000A80  EF44  F005         	goto	u820
  1327  000A84                     u821:
  1328  000A84  EF4C  F005         	goto	l1282
  1329  000A88                     u820:
  1330  000A88  0100               	movlb	0	; () banked
  1331  000A8A  B366               	btfsc	_flags& (0+255),1,b
  1332  000A8C  EF4A  F005         	goto	u831
  1333  000A90  EF4C  F005         	goto	u830
  1334  000A94                     u831:
  1335  000A94  EF92  F004         	goto	l1262
  1336  000A98                     u830:
  1337  000A98                     l1282:
  1338                           
  1339                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 321:     if (s || (f
      +                          lags & (1 << 2))) {
  1340  000A98  5035               	movf	dtoa@s^0,w,c
  1341  000A9A  1036               	iorwf	(dtoa@s+1)^0,w,c
  1342  000A9C  A4D8               	btfss	status,2,c
  1343  000A9E  EF53  F005         	goto	u841
  1344  000AA2  EF55  F005         	goto	u840
  1345  000AA6                     u841:
  1346  000AA6  EF5D  F005         	goto	l1286
  1347  000AAA                     u840:
  1348  000AAA  0100               	movlb	0	; () banked
  1349  000AAC  A566               	btfss	_flags& (0+255),2,b
  1350  000AAE  EF5B  F005         	goto	u851
  1351  000AB2  EF5D  F005         	goto	u850
  1352  000AB6                     u851:
  1353  000AB6  EF7B  F005         	goto	l1296
  1354  000ABA                     u850:
  1355  000ABA                     l1286:
  1356                           
  1357                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 322:         --i;
  1358  000ABA  063F               	decf	dtoa@i^0,f,c
  1359  000ABC  A0D8               	btfss	status,0,c
  1360  000ABE  0640               	decf	(dtoa@i+1)^0,f,c
  1361  000AC0                     
  1362                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 323:         dbuf[i]
      +                           = s ? '-' : '+';
  1363  000AC0  5035               	movf	dtoa@s^0,w,c
  1364  000AC2  1036               	iorwf	(dtoa@s+1)^0,w,c
  1365  000AC4  A4D8               	btfss	status,2,c
  1366  000AC6  EF67  F005         	goto	u861
  1367  000ACA  EF69  F005         	goto	u860
  1368  000ACE                     u861:
  1369  000ACE  EF6F  F005         	goto	l1292
  1370  000AD2                     u860:
  1371  000AD2  0E00               	movlw	0
  1372  000AD4  6E30               	movwf	(_dtoa$636+1)^0,c
  1373  000AD6  0E2B               	movlw	43
  1374  000AD8  6E2F               	movwf	_dtoa$636^0,c
  1375  000ADA  EF73  F005         	goto	l1294
  1376  000ADE                     l1292:
  1377  000ADE  0E00               	movlw	0
  1378  000AE0  6E30               	movwf	(_dtoa$636+1)^0,c
  1379  000AE2  0E2D               	movlw	45
  1380  000AE4  6E2F               	movwf	_dtoa$636^0,c
  1381  000AE6                     l1294:
  1382  000AE6  0E68               	movlw	low _dbuf
  1383  000AE8  243F               	addwf	dtoa@i^0,w,c
  1384  000AEA  6ED9               	movwf	fsr2l,c
  1385  000AEC  0E00               	movlw	high _dbuf
  1386  000AEE  2040               	addwfc	(dtoa@i+1)^0,w,c
  1387  000AF0  6EDA               	movwf	fsr2h,c
  1388  000AF2  C02F  FFDF         	movff	_dtoa$636,indf2
  1389  000AF6                     l1296:
  1390                           
  1391                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 327:     return pad(
      +                          fp, &dbuf[i], w);
  1392  000AF6  C01D  F012         	movff	dtoa@fp,pad@fp
  1393  000AFA  C01E  F013         	movff	dtoa@fp+1,pad@fp+1
  1394  000AFE  0E68               	movlw	low _dbuf
  1395  000B00  243F               	addwf	dtoa@i^0,w,c
  1396  000B02  6E14               	movwf	pad@buf^0,c
  1397  000B04  0E00               	movlw	high _dbuf
  1398  000B06  2040               	addwfc	(dtoa@i+1)^0,w,c
  1399  000B08  6E15               	movwf	(pad@buf+1)^0,c
  1400  000B0A  C033  F016         	movff	dtoa@w,pad@p
  1401  000B0E  C034  F017         	movff	dtoa@w+1,pad@p+1
  1402  000B12  ECE0  F007         	call	_pad	;wreg free
  1403  000B16  C012  F01D         	movff	?_pad,?_dtoa
  1404  000B1A  C013  F01E         	movff	?_pad+1,?_dtoa+1
  1405  000B1E  0012               	return		;funcret
  1406  000B20                     __end_of_dtoa:
  1407                           	callstack 0
  1408                           
  1409 ;; *************** function _pad *****************
  1410 ;; Defined at:
  1411 ;;		line 72 in file "/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c"
  1412 ;; Parameters:    Size  Location     Type
  1413 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  1414 ;;		 -> NULL(0), 
  1415 ;;  buf             2   19[COMRAM] PTR unsigned char 
  1416 ;;		 -> dbuf(32), 
  1417 ;;  p               2   21[COMRAM] int 
  1418 ;; Auto vars:     Size  Location     Type
  1419 ;;  w               2   26[COMRAM] int 
  1420 ;;  i               2   24[COMRAM] int 
  1421 ;; Return value:  Size  Location     Type
  1422 ;;                  2   17[COMRAM] int 
  1423 ;; Registers used:
  1424 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1425 ;; Tracked objects:
  1426 ;;		On entry : 0/0
  1427 ;;		On exit  : 0/0
  1428 ;;		Unchanged: 0/0
  1429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1430 ;;      Params:         6       0       0       0       0       0       0       0       0
  1431 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1432 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1433 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1434 ;;Total ram usage:       11 bytes
  1435 ;; Hardware stack levels used: 1
  1436 ;; Hardware stack levels required when called: 3
  1437 ;; This function calls:
  1438 ;;		_fputc
  1439 ;;		_fputs
  1440 ;;		_strlen
  1441 ;; This function is called by:
  1442 ;;		_dtoa
  1443 ;; This function uses a non-reentrant model
  1444 ;;
  1445                           
  1446                           	psect	text5
  1447  000FC0                     __ptext5:
  1448                           	callstack 0
  1449  000FC0                     _pad:
  1450                           	callstack 23
  1451  000FC0                     
  1452                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 72: static int pad(F
      +                          ILE *fp, char *buf, int p);/Applications/microchip/xc8/v2.35/pic/sources/c99/common/dopr
      +                          nt.c: 73: {;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 74:     i
      +                          nt i, w;;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 77:     if (
      +                          flags & (1 << 0)) {
  1453  000FC0  0100               	movlb	0	; () banked
  1454  000FC2  A166               	btfss	_flags& (0+255),0,b
  1455  000FC4  EFE6  F007         	goto	u671
  1456  000FC8  EFE8  F007         	goto	u670
  1457  000FCC                     u671:
  1458  000FCC  EFF2  F007         	goto	l1216
  1459  000FD0                     u670:
  1460  000FD0                     
  1461                           ; BSR set to: 0
  1462                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 78:         fputs((c
      +                          onst char *)buf, fp);
  1463  000FD0  C014  F00B         	movff	pad@buf,fputs@s
  1464  000FD4  C015  F00C         	movff	pad@buf+1,fputs@s+1
  1465  000FD8  C012  F00D         	movff	pad@fp,fputs@fp
  1466  000FDC  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  1467  000FE0  EC12  F009         	call	_fputs	;wreg free
  1468  000FE4                     l1216:
  1469                           
  1470                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) 
      +                          ? 0 : p;
  1471  000FE4  BE17               	btfsc	(pad@p+1)^0,7,c
  1472  000FE6  EFF7  F007         	goto	u681
  1473  000FEA  EFF9  F007         	goto	u680
  1474  000FEE                     u681:
  1475  000FEE  EFFF  F007         	goto	l1220
  1476  000FF2                     u680:
  1477  000FF2  C016  F01B         	movff	pad@p,pad@w
  1478  000FF6  C017  F01C         	movff	pad@p+1,pad@w+1
  1479  000FFA  EF03  F008         	goto	l738
  1480  000FFE                     l1220:
  1481  000FFE  0E00               	movlw	0
  1482  001000  6E1C               	movwf	(pad@w+1)^0,c
  1483  001002  0E00               	movlw	0
  1484  001004  6E1B               	movwf	pad@w^0,c
  1485  001006                     l738:
  1486                           
  1487                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  1488  001006  0E00               	movlw	0
  1489  001008  6E1A               	movwf	(pad@i+1)^0,c
  1490  00100A  0E00               	movlw	0
  1491  00100C  6E19               	movwf	pad@i^0,c
  1492                           
  1493                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
  1494  00100E  EF15  F008         	goto	l1226
  1495  001012                     l1222:
  1496                           
  1497                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 85:         fputc(' 
      +                          ', fp);
  1498  001012  0E00               	movlw	0
  1499  001014  6E03               	movwf	(fputc@c+1)^0,c
  1500  001016  0E20               	movlw	32
  1501  001018  6E02               	movwf	fputc@c^0,c
  1502  00101A  C012  F004         	movff	pad@fp,fputc@fp
  1503  00101E  C013  F005         	movff	pad@fp+1,fputc@fp+1
  1504  001022  EC96  F008         	call	_fputc	;wreg free
  1505  001026                     
  1506                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 86:         ++i;
  1507  001026  4A19               	infsnz	pad@i^0,f,c
  1508  001028  2A1A               	incf	(pad@i+1)^0,f,c
  1509  00102A                     l1226:
  1510                           
  1511                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
  1512  00102A  501B               	movf	pad@w^0,w,c
  1513  00102C  5C19               	subwf	pad@i^0,w,c
  1514  00102E  501A               	movf	(pad@i+1)^0,w,c
  1515  001030  0A80               	xorlw	128
  1516  001032  6E18               	movwf	??_pad^0,c
  1517  001034  501C               	movf	(pad@w+1)^0,w,c
  1518  001036  0A80               	xorlw	128
  1519  001038  5818               	subwfb	??_pad^0,w,c
  1520  00103A  A0D8               	btfss	status,0,c
  1521  00103C  EF22  F008         	goto	u691
  1522  001040  EF24  F008         	goto	u690
  1523  001044                     u691:
  1524  001044  EF09  F008         	goto	l1222
  1525  001048                     u690:
  1526  001048                     
  1527                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 90:     if (!(flags 
      +                          & (1 << 0))) {
  1528  001048  0100               	movlb	0	; () banked
  1529  00104A  B166               	btfsc	_flags& (0+255),0,b
  1530  00104C  EF2A  F008         	goto	u701
  1531  001050  EF2C  F008         	goto	u700
  1532  001054                     u701:
  1533  001054  EF36  F008         	goto	l1230
  1534  001058                     u700:
  1535  001058                     
  1536                           ; BSR set to: 0
  1537                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 91:         fputs((c
      +                          onst char *)buf, fp);
  1538  001058  C014  F00B         	movff	pad@buf,fputs@s
  1539  00105C  C015  F00C         	movff	pad@buf+1,fputs@s+1
  1540  001060  C012  F00D         	movff	pad@fp,fputs@fp
  1541  001064  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  1542  001068  EC12  F009         	call	_fputs	;wreg free
  1543  00106C                     l1230:
  1544                           
  1545                           ;/Applications/microchip/xc8/v2.35/pic/sources/c99/common/doprnt.c: 94:     return (int)
      +                          (strlen(buf) + (size_t)w);
  1546  00106C  C014  F001         	movff	pad@buf,strlen@s
  1547  001070  C015  F002         	movff	pad@buf+1,strlen@s+1
  1548  001074  EC54  F009         	call	_strlen	;wreg free
  1549  001078  501B               	movf	pad@w^0,w,c
  1550  00107A  2401               	addwf	?_strlen^0,w,c
  1551  00107C  6E12               	movwf	?_pad^0,c
  1552  00107E  501C               	movf	(pad@w+1)^0,w,c
  1553  001080  2002               	addwfc	(?_strlen+1)^0,w,c
  1554  001082  6E13               	movwf	(?_pad+1)^0,c
  1555  001084  0012               	return		;funcret
  1556  001086                     __end_of_pad:
  1557                           	callstack 0
  1558                           
  1559 ;; *************** function _strlen *****************
  1560 ;; Defined at:
  1561 ;;		line 5 in file "/Applications/microchip/xc8/v2.35/pic/sources/c99/common/strlen.c"
  1562 ;; Parameters:    Size  Location     Type
  1563 ;;  s               2    0[COMRAM] PTR const unsigned char 
  1564 ;;		 -> dbuf(32), 
  1565 ;; Auto vars:     Size  Location     Type
  1566 ;;  a               2    2[COMRAM] PTR const unsigned char 
  1567 ;;		 -> dbuf(32), 
  1568 ;; Return value:  Size  Location     Type
  1569 ;;                  2    0[COMRAM] unsigned int 
  1570 ;; Registers used:
  1571 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1572 ;; Tracked objects:
  1573 ;;		On entry : 0/0
  1574 ;;		On exit  : 0/0
  1575 ;;		Unchanged: 0/0
  1576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1577 ;;      Params:         2       0       0       0       0       0       0       0       0
  1578 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1579 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1580 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1581 ;;Total ram usage:        4 bytes
  1582 ;; Hardware stack levels used: 1
  1583 ;; This function calls:
  1584 ;;		Nothing
  1585 ;; This function is called by:
  1586 ;;		_pad
  1587 ;; This function uses a non-reentrant model
  1588 ;;
  1589                           
  1590                           	psect	text6
  1591  0012A8                     __ptext6:
  1592                           	callstack 0
  1593  0012A8                     _strlen:
  1594                           	callstack 25
  1595  0012A8  C001  F003         	movff	strlen@s,strlen@a
  1596  0012AC  C002  F004         	movff	strlen@s+1,strlen@a+1
  1597  0012B0  EF5C  F009         	goto	l1126
  1598  0012B4                     l1124:
  1599  0012B4  4A01               	infsnz	strlen@s^0,f,c
  1600  0012B6  2A02               	incf	(strlen@s+1)^0,f,c
  1601  0012B8                     l1126:
  1602  0012B8  C001  FFD9         	movff	strlen@s,fsr2l
  1603  0012BC  C002  FFDA         	movff	strlen@s+1,fsr2h
  1604  0012C0  50DF               	movf	indf2,w,c
  1605  0012C2  A4D8               	btfss	status,2,c
  1606  0012C4  EF66  F009         	goto	u531
  1607  0012C8  EF68  F009         	goto	u530
  1608  0012CC                     u531:
  1609  0012CC  EF5A  F009         	goto	l1124
  1610  0012D0                     u530:
  1611  0012D0  5003               	movf	strlen@a^0,w,c
  1612  0012D2  5C01               	subwf	strlen@s^0,w,c
  1613  0012D4  6E01               	movwf	?_strlen^0,c
  1614  0012D6  5004               	movf	(strlen@a+1)^0,w,c
  1615  0012D8  5802               	subwfb	(strlen@s+1)^0,w,c
  1616  0012DA  6E02               	movwf	(?_strlen+1)^0,c
  1617  0012DC  0012               	return		;funcret
  1618  0012DE                     __end_of_strlen:
  1619                           	callstack 0
  1620                           
  1621 ;; *************** function _fputs *****************
  1622 ;; Defined at:
  1623 ;;		line 8 in file "/Applications/microchip/xc8/v2.35/pic/sources/c99/common/nf_fputs.c"
  1624 ;; Parameters:    Size  Location     Type
  1625 ;;  s               2   10[COMRAM] PTR const unsigned char 
  1626 ;;		 -> dbuf(32), 
  1627 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
  1628 ;;		 -> NULL(0), 
  1629 ;; Auto vars:     Size  Location     Type
  1630 ;;  i               2   15[COMRAM] int 
  1631 ;;  c               1   14[COMRAM] unsigned char 
  1632 ;; Return value:  Size  Location     Type
  1633 ;;                  2   10[COMRAM] int 
  1634 ;; Registers used:
  1635 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1636 ;; Tracked objects:
  1637 ;;		On entry : 0/0
  1638 ;;		On exit  : 0/0
  1639 ;;		Unchanged: 0/0
  1640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1641 ;;      Params:         4       0       0       0       0       0       0       0       0
  1642 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1643 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1644 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1645 ;;Total ram usage:        7 bytes
  1646 ;; Hardware stack levels used: 1
  1647 ;; Hardware stack levels required when called: 2
  1648 ;; This function calls:
  1649 ;;		_fputc
  1650 ;; This function is called by:
  1651 ;;		_pad
  1652 ;; This function uses a non-reentrant model
  1653 ;;
  1654                           
  1655                           	psect	text7
  1656  001224                     __ptext7:
  1657                           	callstack 0
  1658  001224                     _fputs:
  1659                           	callstack 23
  1660  001224  0E00               	movlw	0
  1661  001226  6E11               	movwf	(fputs@i+1)^0,c
  1662  001228  0E00               	movlw	0
  1663  00122A  6E10               	movwf	fputs@i^0,c
  1664  00122C  EF23  F009         	goto	l1120
  1665  001230                     l1116:
  1666  001230  C00F  F002         	movff	fputs@c,fputc@c
  1667  001234  6A03               	clrf	(fputc@c+1)^0,c
  1668  001236  C00D  F004         	movff	fputs@fp,fputc@fp
  1669  00123A  C00E  F005         	movff	fputs@fp+1,fputc@fp+1
  1670  00123E  EC96  F008         	call	_fputc	;wreg free
  1671  001242  4A10               	infsnz	fputs@i^0,f,c
  1672  001244  2A11               	incf	(fputs@i+1)^0,f,c
  1673  001246                     l1120:
  1674  001246  5010               	movf	fputs@i^0,w,c
  1675  001248  240B               	addwf	fputs@s^0,w,c
  1676  00124A  6ED9               	movwf	fsr2l,c
  1677  00124C  5011               	movf	(fputs@i+1)^0,w,c
  1678  00124E  200C               	addwfc	(fputs@s+1)^0,w,c
  1679  001250  6EDA               	movwf	fsr2h,c
  1680  001252  50DF               	movf	indf2,w,c
  1681  001254  6E0F               	movwf	fputs@c^0,c
  1682  001256  500F               	movf	fputs@c^0,w,c
  1683  001258  A4D8               	btfss	status,2,c
  1684  00125A  EF31  F009         	goto	u521
  1685  00125E  EF33  F009         	goto	u520
  1686  001262                     u521:
  1687  001262  EF18  F009         	goto	l1116
  1688  001266                     u520:
  1689  001266  0012               	return		;funcret
  1690  001268                     __end_of_fputs:
  1691                           	callstack 0
  1692                           
  1693 ;; *************** function _fputc *****************
  1694 ;; Defined at:
  1695 ;;		line 8 in file "/Applications/microchip/xc8/v2.35/pic/sources/c99/common/nf_fputc.c"
  1696 ;; Parameters:    Size  Location     Type
  1697 ;;  c               2    1[COMRAM] int 
  1698 ;;  fp              2    3[COMRAM] PTR struct _IO_FILE
  1699 ;;		 -> NULL(0), 
  1700 ;; Auto vars:     Size  Location     Type
  1701 ;;		None
  1702 ;; Return value:  Size  Location     Type
  1703 ;;                  2    1[COMRAM] int 
  1704 ;; Registers used:
  1705 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1706 ;; Tracked objects:
  1707 ;;		On entry : 0/0
  1708 ;;		On exit  : 0/0
  1709 ;;		Unchanged: 0/0
  1710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1711 ;;      Params:         4       0       0       0       0       0       0       0       0
  1712 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1713 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1714 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1715 ;;Total ram usage:        9 bytes
  1716 ;; Hardware stack levels used: 1
  1717 ;; Hardware stack levels required when called: 1
  1718 ;; This function calls:
  1719 ;;		_putch
  1720 ;; This function is called by:
  1721 ;;		_pad
  1722 ;;		_vfpfcnvrt
  1723 ;;		_fputs
  1724 ;; This function uses a non-reentrant model
  1725 ;;
  1726                           
  1727                           	psect	text8
  1728  00112C                     __ptext8:
  1729                           	callstack 0
  1730  00112C                     _fputc:
  1731                           	callstack 26
  1732  00112C  5004               	movf	fputc@fp^0,w,c
  1733  00112E  1005               	iorwf	(fputc@fp+1)^0,w,c
  1734  001130  B4D8               	btfsc	status,2,c
  1735  001132  EF9D  F008         	goto	u481
  1736  001136  EF9F  F008         	goto	u480
  1737  00113A                     u481:
  1738  00113A  EFA8  F008         	goto	l1104
  1739  00113E                     u480:
  1740  00113E  5004               	movf	fputc@fp^0,w,c
  1741  001140  1005               	iorwf	(fputc@fp+1)^0,w,c
  1742  001142  A4D8               	btfss	status,2,c
  1743  001144  EFA6  F008         	goto	u491
  1744  001148  EFA8  F008         	goto	u490
  1745  00114C                     u491:
  1746  00114C  EFAD  F008         	goto	l1106
  1747  001150                     u490:
  1748  001150                     l1104:
  1749  001150  5002               	movf	fputc@c^0,w,c
  1750  001152  ECA2  F009         	call	_putch
  1751  001156  EFE0  F008         	goto	l802
  1752  00115A                     l1106:
  1753  00115A  EE20 F009          	lfsr	2,9
  1754  00115E  5004               	movf	fputc@fp^0,w,c
  1755  001160  26D9               	addwf	fsr2l,f,c
  1756  001162  5005               	movf	(fputc@fp+1)^0,w,c
  1757  001164  22DA               	addwfc	fsr2h,f,c
  1758  001166  50DE               	movf	postinc2,w,c
  1759  001168  10DE               	iorwf	postinc2,w,c
  1760  00116A  B4D8               	btfsc	status,2,c
  1761  00116C  EFBA  F008         	goto	u501
  1762  001170  EFBC  F008         	goto	u500
  1763  001174                     u501:
  1764  001174  EFD7  F008         	goto	l1110
  1765  001178                     u500:
  1766  001178  EE20 F009          	lfsr	2,9
  1767  00117C  5004               	movf	fputc@fp^0,w,c
  1768  00117E  26D9               	addwf	fsr2l,f,c
  1769  001180  5005               	movf	(fputc@fp+1)^0,w,c
  1770  001182  22DA               	addwfc	fsr2h,f,c
  1771  001184  EE10 F003          	lfsr	1,3
  1772  001188  5004               	movf	fputc@fp^0,w,c
  1773  00118A  26E1               	addwf	fsr1l,f,c
  1774  00118C  5005               	movf	(fputc@fp+1)^0,w,c
  1775  00118E  22E2               	addwfc	fsr1h,f,c
  1776  001190  50DE               	movf	postinc2,w,c
  1777  001192  5CE6               	subwf	postinc1,w,c
  1778  001194  50E6               	movf	postinc1,w,c
  1779  001196  0A80               	xorlw	128
  1780  001198  6E0A               	movwf	(??_fputc+4)^0,c
  1781  00119A  50DE               	movf	postinc2,w,c
  1782  00119C  0A80               	xorlw	128
  1783  00119E  580A               	subwfb	(??_fputc+4)^0,w,c
  1784  0011A0  B0D8               	btfsc	status,0,c
  1785  0011A2  EFD5  F008         	goto	u511
  1786  0011A6  EFD7  F008         	goto	u510
  1787  0011AA                     u511:
  1788  0011AA  EFE0  F008         	goto	l802
  1789  0011AE                     u510:
  1790  0011AE                     l1110:
  1791  0011AE  EE20 F003          	lfsr	2,3
  1792  0011B2  5004               	movf	fputc@fp^0,w,c
  1793  0011B4  26D9               	addwf	fsr2l,f,c
  1794  0011B6  5005               	movf	(fputc@fp+1)^0,w,c
  1795  0011B8  22DA               	addwfc	fsr2h,f,c
  1796  0011BA  2ADE               	incf	postinc2,f,c
  1797  0011BC  0E00               	movlw	0
  1798  0011BE  22DD               	addwfc	postdec2,f,c
  1799  0011C0                     l802:
  1800  0011C0  0012               	return		;funcret
  1801  0011C2                     __end_of_fputc:
  1802                           	callstack 0
  1803                           
  1804 ;; *************** function _putch *****************
  1805 ;; Defined at:
  1806 ;;		line 13 in file "kmultiply.c"
  1807 ;; Parameters:    Size  Location     Type
  1808 ;;  c               1    wreg     unsigned char 
  1809 ;; Auto vars:     Size  Location     Type
  1810 ;;  c               1    0[COMRAM] unsigned char 
  1811 ;; Return value:  Size  Location     Type
  1812 ;;                  1    wreg      void 
  1813 ;; Registers used:
  1814 ;;		wreg
  1815 ;; Tracked objects:
  1816 ;;		On entry : 0/0
  1817 ;;		On exit  : 0/0
  1818 ;;		Unchanged: 0/0
  1819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1820 ;;      Params:         0       0       0       0       0       0       0       0       0
  1821 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1822 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1823 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1824 ;;Total ram usage:        1 bytes
  1825 ;; Hardware stack levels used: 1
  1826 ;; This function calls:
  1827 ;;		Nothing
  1828 ;; This function is called by:
  1829 ;;		_fputc
  1830 ;; This function uses a non-reentrant model
  1831 ;;
  1832                           
  1833                           	psect	text9
  1834  001344                     __ptext9:
  1835                           	callstack 0
  1836  001344                     _putch:
  1837                           	callstack 26
  1838                           
  1839                           ;incstack = 0
  1840                           ;putch@c stored from wreg
  1841  001344  6E01               	movwf	putch@c^0,c
  1842  001346                     l19:
  1843  001346  A89E               	btfss	158,4,c	;volatile
  1844  001348  EFA8  F009         	goto	u471
  1845  00134C  EFAA  F009         	goto	u470
  1846  001350                     u471:
  1847  001350  EFA3  F009         	goto	l19
  1848  001354                     u470:
  1849  001354                     
  1850                           ;kmultiply.c: 15:     TXREG = c;
  1851  001354  C001  FFAD         	movff	putch@c,4013	;volatile
  1852  001358  0012               	return		;funcret
  1853  00135A                     __end_of_putch:
  1854                           	callstack 0
  1855                           
  1856 ;; *************** function _abs *****************
  1857 ;; Defined at:
  1858 ;;		line 1 in file "/Applications/microchip/xc8/v2.35/pic/sources/c99/common/abs.c"
  1859 ;; Parameters:    Size  Location     Type
  1860 ;;  a               2   18[COMRAM] int 
  1861 ;; Auto vars:     Size  Location     Type
  1862 ;;		None
  1863 ;; Return value:  Size  Location     Type
  1864 ;;                  2   18[COMRAM] int 
  1865 ;; Registers used:
  1866 ;;		wreg, status,2, status,0
  1867 ;; Tracked objects:
  1868 ;;		On entry : 0/0
  1869 ;;		On exit  : 0/0
  1870 ;;		Unchanged: 0/0
  1871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1872 ;;      Params:         2       0       0       0       0       0       0       0       0
  1873 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1874 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1875 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1876 ;;Total ram usage:        4 bytes
  1877 ;; Hardware stack levels used: 1
  1878 ;; This function calls:
  1879 ;;		Nothing
  1880 ;; This function is called by:
  1881 ;;		_dtoa
  1882 ;; This function uses a non-reentrant model
  1883 ;;
  1884                           
  1885                           	psect	text10
  1886  001268                     __ptext10:
  1887                           	callstack 0
  1888  001268                     _abs:
  1889                           	callstack 26
  1890  001268  BE14               	btfsc	(abs@a+1)^0,7,c
  1891  00126A  EF41  F009         	goto	u710
  1892  00126E  5014               	movf	(abs@a+1)^0,w,c
  1893  001270  E106               	bnz	u711
  1894  001272  0413               	decf	abs@a^0,w,c
  1895  001274  B0D8               	btfsc	status,0,c
  1896  001276  EF3F  F009         	goto	u711
  1897  00127A  EF41  F009         	goto	u710
  1898  00127E                     u711:
  1899  00127E  EF4F  F009         	goto	l787
  1900  001282                     u710:
  1901  001282  C013  F015         	movff	abs@a,??_abs
  1902  001286  C014  F016         	movff	abs@a+1,??_abs+1
  1903  00128A  1E15               	comf	??_abs^0,f,c
  1904  00128C  1E16               	comf	(??_abs+1)^0,f,c
  1905  00128E  4A15               	infsnz	??_abs^0,f,c
  1906  001290  2A16               	incf	(??_abs+1)^0,f,c
  1907  001292  C015  F013         	movff	??_abs,?_abs
  1908  001296  C016  F014         	movff	??_abs+1,?_abs+1
  1909  00129A  EF53  F009         	goto	l790
  1910  00129E                     l787:
  1911  00129E  C013  F013         	movff	abs@a,?_abs
  1912  0012A2  C014  F014         	movff	abs@a+1,?_abs+1
  1913  0012A6                     l790:
  1914  0012A6  0012               	return		;funcret
  1915  0012A8                     __end_of_abs:
  1916                           	callstack 0
  1917                           
  1918 ;; *************** function ___aomod *****************
  1919 ;; Defined at:
  1920 ;;		line 9 in file "/Applications/microchip/xc8/v2.35/pic/sources/c99/common/aomod.c"
  1921 ;; Parameters:    Size  Location     Type
  1922 ;;  dividend        8    0[COMRAM] long long 
  1923 ;;  divisor         8    8[COMRAM] long long 
  1924 ;; Auto vars:     Size  Location     Type
  1925 ;;  sign            1   17[COMRAM] unsigned char 
  1926 ;;  counter         1   16[COMRAM] unsigned char 
  1927 ;; Return value:  Size  Location     Type
  1928 ;;                  8    0[COMRAM] long long 
  1929 ;; Registers used:
  1930 ;;		wreg, status,2, status,0
  1931 ;; Tracked objects:
  1932 ;;		On entry : 0/0
  1933 ;;		On exit  : 0/0
  1934 ;;		Unchanged: 0/0
  1935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1936 ;;      Params:        16       0       0       0       0       0       0       0       0
  1937 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1938 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1939 ;;      Totals:        18       0       0       0       0       0       0       0       0
  1940 ;;Total ram usage:       18 bytes
  1941 ;; Hardware stack levels used: 1
  1942 ;; This function calls:
  1943 ;;		Nothing
  1944 ;; This function is called by:
  1945 ;;		_dtoa
  1946 ;; This function uses a non-reentrant model
  1947 ;;
  1948                           
  1949                           	psect	text11
  1950  000E5C                     __ptext11:
  1951                           	callstack 0
  1952  000E5C                     ___aomod:
  1953                           	callstack 26
  1954  000E5C  0E00               	movlw	0
  1955  000E5E  6E12               	movwf	___aomod@sign^0,c
  1956  000E60  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  1957  000E62  EF37  F007         	goto	u610
  1958  000E66  EF35  F007         	goto	u611
  1959  000E6A                     u611:
  1960  000E6A  EF49  F007         	goto	l1184
  1961  000E6E                     u610:
  1962  000E6E  1E08               	comf	(___aomod@dividend+7)^0,f,c
  1963  000E70  1E07               	comf	(___aomod@dividend+6)^0,f,c
  1964  000E72  1E06               	comf	(___aomod@dividend+5)^0,f,c
  1965  000E74  1E05               	comf	(___aomod@dividend+4)^0,f,c
  1966  000E76  1E04               	comf	(___aomod@dividend+3)^0,f,c
  1967  000E78  1E03               	comf	(___aomod@dividend+2)^0,f,c
  1968  000E7A  1E02               	comf	(___aomod@dividend+1)^0,f,c
  1969  000E7C  6C01               	negf	___aomod@dividend^0,c
  1970  000E7E  0E00               	movlw	0
  1971  000E80  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  1972  000E82  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  1973  000E84  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  1974  000E86  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  1975  000E88  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  1976  000E8A  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  1977  000E8C  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  1978  000E8E  0E01               	movlw	1
  1979  000E90  6E12               	movwf	___aomod@sign^0,c
  1980  000E92                     l1184:
  1981  000E92  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  1982  000E94  EF50  F007         	goto	u620
  1983  000E98  EF4E  F007         	goto	u621
  1984  000E9C                     u621:
  1985  000E9C  EF60  F007         	goto	l1188
  1986  000EA0                     u620:
  1987  000EA0  1E10               	comf	(___aomod@divisor+7)^0,f,c
  1988  000EA2  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  1989  000EA4  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  1990  000EA6  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  1991  000EA8  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  1992  000EAA  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  1993  000EAC  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  1994  000EAE  6C09               	negf	___aomod@divisor^0,c
  1995  000EB0  0E00               	movlw	0
  1996  000EB2  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  1997  000EB4  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  1998  000EB6  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  1999  000EB8  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  2000  000EBA  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  2001  000EBC  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  2002  000EBE  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  2003  000EC0                     l1188:
  2004  000EC0  5009               	movf	___aomod@divisor^0,w,c
  2005  000EC2  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  2006  000EC4  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  2007  000EC6  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  2008  000EC8  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  2009  000ECA  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  2010  000ECC  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  2011  000ECE  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  2012  000ED0  B4D8               	btfsc	status,2,c
  2013  000ED2  EF6D  F007         	goto	u631
  2014  000ED6  EF6F  F007         	goto	u630
  2015  000EDA                     u631:
  2016  000EDA  EFB7  F007         	goto	l1204
  2017  000EDE                     u630:
  2018  000EDE  0E01               	movlw	1
  2019  000EE0  6E11               	movwf	___aomod@counter^0,c
  2020  000EE2  EF7D  F007         	goto	l1194
  2021  000EE6                     l1192:
  2022  000EE6  90D8               	bcf	status,0,c
  2023  000EE8  3609               	rlcf	___aomod@divisor^0,f,c
  2024  000EEA  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  2025  000EEC  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  2026  000EEE  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  2027  000EF0  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  2028  000EF2  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  2029  000EF4  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  2030  000EF6  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  2031  000EF8  2A11               	incf	___aomod@counter^0,f,c
  2032  000EFA                     l1194:
  2033  000EFA  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  2034  000EFC  EF82  F007         	goto	u641
  2035  000F00  EF84  F007         	goto	u640
  2036  000F04                     u641:
  2037  000F04  EF73  F007         	goto	l1192
  2038  000F08                     u640:
  2039  000F08                     l1196:
  2040  000F08  5009               	movf	___aomod@divisor^0,w,c
  2041  000F0A  5C01               	subwf	___aomod@dividend^0,w,c
  2042  000F0C  500A               	movf	(___aomod@divisor+1)^0,w,c
  2043  000F0E  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  2044  000F10  500B               	movf	(___aomod@divisor+2)^0,w,c
  2045  000F12  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  2046  000F14  500C               	movf	(___aomod@divisor+3)^0,w,c
  2047  000F16  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  2048  000F18  500D               	movf	(___aomod@divisor+4)^0,w,c
  2049  000F1A  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  2050  000F1C  500E               	movf	(___aomod@divisor+5)^0,w,c
  2051  000F1E  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  2052  000F20  500F               	movf	(___aomod@divisor+6)^0,w,c
  2053  000F22  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  2054  000F24  5010               	movf	(___aomod@divisor+7)^0,w,c
  2055  000F26  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  2056  000F28  A0D8               	btfss	status,0,c
  2057  000F2A  EF99  F007         	goto	u651
  2058  000F2E  EF9B  F007         	goto	u650
  2059  000F32                     u651:
  2060  000F32  EFAB  F007         	goto	l1200
  2061  000F36                     u650:
  2062  000F36  5009               	movf	___aomod@divisor^0,w,c
  2063  000F38  5E01               	subwf	___aomod@dividend^0,f,c
  2064  000F3A  500A               	movf	(___aomod@divisor+1)^0,w,c
  2065  000F3C  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  2066  000F3E  500B               	movf	(___aomod@divisor+2)^0,w,c
  2067  000F40  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  2068  000F42  500C               	movf	(___aomod@divisor+3)^0,w,c
  2069  000F44  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  2070  000F46  500D               	movf	(___aomod@divisor+4)^0,w,c
  2071  000F48  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  2072  000F4A  500E               	movf	(___aomod@divisor+5)^0,w,c
  2073  000F4C  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  2074  000F4E  500F               	movf	(___aomod@divisor+6)^0,w,c
  2075  000F50  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  2076  000F52  5010               	movf	(___aomod@divisor+7)^0,w,c
  2077  000F54  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  2078  000F56                     l1200:
  2079  000F56  90D8               	bcf	status,0,c
  2080  000F58  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  2081  000F5A  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  2082  000F5C  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  2083  000F5E  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  2084  000F60  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  2085  000F62  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  2086  000F64  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  2087  000F66  3209               	rrcf	___aomod@divisor^0,f,c
  2088  000F68  2E11               	decfsz	___aomod@counter^0,f,c
  2089  000F6A  EF84  F007         	goto	l1196
  2090  000F6E                     l1204:
  2091  000F6E  5012               	movf	___aomod@sign^0,w,c
  2092  000F70  B4D8               	btfsc	status,2,c
  2093  000F72  EFBD  F007         	goto	u661
  2094  000F76  EFBF  F007         	goto	u660
  2095  000F7A                     u661:
  2096  000F7A  EFCF  F007         	goto	l1208
  2097  000F7E                     u660:
  2098  000F7E  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2099  000F80  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2100  000F82  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2101  000F84  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2102  000F86  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2103  000F88  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2104  000F8A  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2105  000F8C  6C01               	negf	___aomod@dividend^0,c
  2106  000F8E  0E00               	movlw	0
  2107  000F90  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2108  000F92  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2109  000F94  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2110  000F96  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2111  000F98  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2112  000F9A  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2113  000F9C  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2114  000F9E                     l1208:
  2115  000F9E  C001  F001         	movff	___aomod@dividend,?___aomod
  2116  000FA2  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  2117  000FA6  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  2118  000FAA  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  2119  000FAE  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  2120  000FB2  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  2121  000FB6  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  2122  000FBA  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  2123  000FBE  0012               	return		;funcret
  2124  000FC0                     __end_of___aomod:
  2125                           	callstack 0
  2126                           
  2127 ;; *************** function ___aodiv *****************
  2128 ;; Defined at:
  2129 ;;		line 9 in file "/Applications/microchip/xc8/v2.35/pic/sources/c99/common/aodiv.c"
  2130 ;; Parameters:    Size  Location     Type
  2131 ;;  dividend        8    0[COMRAM] long long 
  2132 ;;  divisor         8    8[COMRAM] long long 
  2133 ;; Auto vars:     Size  Location     Type
  2134 ;;  quotient        8   18[COMRAM] long long 
  2135 ;;  sign            1   17[COMRAM] unsigned char 
  2136 ;;  counter         1   16[COMRAM] unsigned char 
  2137 ;; Return value:  Size  Location     Type
  2138 ;;                  8    0[COMRAM] long long 
  2139 ;; Registers used:
  2140 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2141 ;; Tracked objects:
  2142 ;;		On entry : 0/0
  2143 ;;		On exit  : 0/0
  2144 ;;		Unchanged: 0/0
  2145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2146 ;;      Params:        16       0       0       0       0       0       0       0       0
  2147 ;;      Locals:        10       0       0       0       0       0       0       0       0
  2148 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2149 ;;      Totals:        26       0       0       0       0       0       0       0       0
  2150 ;;Total ram usage:       26 bytes
  2151 ;; Hardware stack levels used: 1
  2152 ;; This function calls:
  2153 ;;		Nothing
  2154 ;; This function is called by:
  2155 ;;		_dtoa
  2156 ;; This function uses a non-reentrant model
  2157 ;;
  2158                           
  2159                           	psect	text12
  2160  000CD4                     __ptext12:
  2161                           	callstack 0
  2162  000CD4                     ___aodiv:
  2163                           	callstack 26
  2164  000CD4  0E00               	movlw	0
  2165  000CD6  6E12               	movwf	___aodiv@sign^0,c
  2166  000CD8  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  2167  000CDA  EF73  F006         	goto	u540
  2168  000CDE  EF71  F006         	goto	u541
  2169  000CE2                     u541:
  2170  000CE2  EF85  F006         	goto	l1140
  2171  000CE6                     u540:
  2172  000CE6  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  2173  000CE8  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  2174  000CEA  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  2175  000CEC  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  2176  000CEE  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  2177  000CF0  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  2178  000CF2  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  2179  000CF4  6C09               	negf	___aodiv@divisor^0,c
  2180  000CF6  0E00               	movlw	0
  2181  000CF8  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  2182  000CFA  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  2183  000CFC  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  2184  000CFE  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  2185  000D00  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  2186  000D02  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  2187  000D04  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  2188  000D06  0E01               	movlw	1
  2189  000D08  6E12               	movwf	___aodiv@sign^0,c
  2190  000D0A                     l1140:
  2191  000D0A  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  2192  000D0C  EF8C  F006         	goto	u550
  2193  000D10  EF8A  F006         	goto	u551
  2194  000D14                     u551:
  2195  000D14  EF9E  F006         	goto	l1146
  2196  000D18                     u550:
  2197  000D18  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  2198  000D1A  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  2199  000D1C  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  2200  000D1E  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  2201  000D20  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  2202  000D22  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  2203  000D24  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  2204  000D26  6C01               	negf	___aodiv@dividend^0,c
  2205  000D28  0E00               	movlw	0
  2206  000D2A  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  2207  000D2C  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  2208  000D2E  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  2209  000D30  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  2210  000D32  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  2211  000D34  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  2212  000D36  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  2213  000D38  0E01               	movlw	1
  2214  000D3A  1A12               	xorwf	___aodiv@sign^0,f,c
  2215  000D3C                     l1146:
  2216  000D3C  EE20  F013         	lfsr	2,___aodiv@quotient
  2217  000D40  0E07               	movlw	7
  2218  000D42                     u561:
  2219  000D42  6ADE               	clrf	postinc2,c
  2220  000D44  06E8               	decf	wreg,f,c
  2221  000D46  E2FD               	bc	u561
  2222  000D48  5009               	movf	___aodiv@divisor^0,w,c
  2223  000D4A  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  2224  000D4C  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  2225  000D4E  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  2226  000D50  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  2227  000D52  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  2228  000D54  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  2229  000D56  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  2230  000D58  B4D8               	btfsc	status,2,c
  2231  000D5A  EFB1  F006         	goto	u571
  2232  000D5E  EFB3  F006         	goto	u570
  2233  000D62                     u571:
  2234  000D62  EF05  F007         	goto	l1168
  2235  000D66                     u570:
  2236  000D66  0E01               	movlw	1
  2237  000D68  6E11               	movwf	___aodiv@counter^0,c
  2238  000D6A  EFC1  F006         	goto	l1154
  2239  000D6E                     l1152:
  2240  000D6E  90D8               	bcf	status,0,c
  2241  000D70  3609               	rlcf	___aodiv@divisor^0,f,c
  2242  000D72  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  2243  000D74  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  2244  000D76  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  2245  000D78  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  2246  000D7A  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  2247  000D7C  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  2248  000D7E  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  2249  000D80  2A11               	incf	___aodiv@counter^0,f,c
  2250  000D82                     l1154:
  2251  000D82  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  2252  000D84  EFC6  F006         	goto	u581
  2253  000D88  EFC8  F006         	goto	u580
  2254  000D8C                     u581:
  2255  000D8C  EFB7  F006         	goto	l1152
  2256  000D90                     u580:
  2257  000D90                     l1156:
  2258  000D90  90D8               	bcf	status,0,c
  2259  000D92  3613               	rlcf	___aodiv@quotient^0,f,c
  2260  000D94  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  2261  000D96  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  2262  000D98  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  2263  000D9A  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  2264  000D9C  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  2265  000D9E  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  2266  000DA0  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  2267  000DA2  5009               	movf	___aodiv@divisor^0,w,c
  2268  000DA4  5C01               	subwf	___aodiv@dividend^0,w,c
  2269  000DA6  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2270  000DA8  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  2271  000DAA  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2272  000DAC  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  2273  000DAE  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2274  000DB0  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  2275  000DB2  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2276  000DB4  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  2277  000DB6  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2278  000DB8  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  2279  000DBA  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2280  000DBC  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  2281  000DBE  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2282  000DC0  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  2283  000DC2  A0D8               	btfss	status,0,c
  2284  000DC4  EFE6  F006         	goto	u591
  2285  000DC8  EFE8  F006         	goto	u590
  2286  000DCC                     u591:
  2287  000DCC  EFF9  F006         	goto	l1164
  2288  000DD0                     u590:
  2289  000DD0  5009               	movf	___aodiv@divisor^0,w,c
  2290  000DD2  5E01               	subwf	___aodiv@dividend^0,f,c
  2291  000DD4  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2292  000DD6  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  2293  000DD8  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2294  000DDA  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  2295  000DDC  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2296  000DDE  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  2297  000DE0  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2298  000DE2  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  2299  000DE4  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2300  000DE6  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  2301  000DE8  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2302  000DEA  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  2303  000DEC  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2304  000DEE  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  2305  000DF0  8013               	bsf	___aodiv@quotient^0,0,c
  2306  000DF2                     l1164:
  2307  000DF2  90D8               	bcf	status,0,c
  2308  000DF4  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  2309  000DF6  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  2310  000DF8  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  2311  000DFA  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  2312  000DFC  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  2313  000DFE  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  2314  000E00  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  2315  000E02  3209               	rrcf	___aodiv@divisor^0,f,c
  2316  000E04  2E11               	decfsz	___aodiv@counter^0,f,c
  2317  000E06  EFC8  F006         	goto	l1156
  2318  000E0A                     l1168:
  2319  000E0A  5012               	movf	___aodiv@sign^0,w,c
  2320  000E0C  B4D8               	btfsc	status,2,c
  2321  000E0E  EF0B  F007         	goto	u601
  2322  000E12  EF0D  F007         	goto	u600
  2323  000E16                     u601:
  2324  000E16  EF1D  F007         	goto	l1172
  2325  000E1A                     u600:
  2326  000E1A  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  2327  000E1C  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  2328  000E1E  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  2329  000E20  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  2330  000E22  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  2331  000E24  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  2332  000E26  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  2333  000E28  6C13               	negf	___aodiv@quotient^0,c
  2334  000E2A  0E00               	movlw	0
  2335  000E2C  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  2336  000E2E  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  2337  000E30  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  2338  000E32  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  2339  000E34  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  2340  000E36  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  2341  000E38  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  2342  000E3A                     l1172:
  2343  000E3A  C013  F001         	movff	___aodiv@quotient,?___aodiv
  2344  000E3E  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  2345  000E42  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  2346  000E46  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  2347  000E4A  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  2348  000E4E  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  2349  000E52  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  2350  000E56  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  2351  000E5A  0012               	return		;funcret
  2352  000E5C                     __end_of___aodiv:
  2353                           	callstack 0
  2354                           
  2355 ;; *************** function ___wmul *****************
  2356 ;; Defined at:
  2357 ;;		line 15 in file "/Applications/microchip/xc8/v2.35/pic/sources/c99/common/Umul16.c"
  2358 ;; Parameters:    Size  Location     Type
  2359 ;;  multiplier      2    0[COMRAM] unsigned int 
  2360 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2361 ;; Auto vars:     Size  Location     Type
  2362 ;;  product         2    4[COMRAM] unsigned int 
  2363 ;; Return value:  Size  Location     Type
  2364 ;;                  2    0[COMRAM] unsigned int 
  2365 ;; Registers used:
  2366 ;;		wreg, status,2, status,0, prodl, prodh
  2367 ;; Tracked objects:
  2368 ;;		On entry : 0/0
  2369 ;;		On exit  : 0/0
  2370 ;;		Unchanged: 0/0
  2371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2372 ;;      Params:         4       0       0       0       0       0       0       0       0
  2373 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2374 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2375 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2376 ;;Total ram usage:        6 bytes
  2377 ;; Hardware stack levels used: 1
  2378 ;; This function calls:
  2379 ;;		Nothing
  2380 ;; This function is called by:
  2381 ;;		_main
  2382 ;; This function uses a non-reentrant model
  2383 ;;
  2384                           
  2385                           	psect	text13
  2386  001304                     __ptext13:
  2387                           	callstack 0
  2388  001304                     ___wmul:
  2389                           	callstack 30
  2390  001304  5001               	movf	___wmul@multiplier^0,w,c
  2391  001306  0203               	mulwf	___wmul@multiplicand^0,c
  2392  001308  CFF3 F005          	movff	prodl,___wmul@product
  2393  00130C  CFF4 F006          	movff	prodh,___wmul@product+1
  2394  001310  5001               	movf	___wmul@multiplier^0,w,c
  2395  001312  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2396  001314  50F3               	movf	243,w,c
  2397  001316  2606               	addwf	(___wmul@product+1)^0,f,c
  2398  001318  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2399  00131A  0203               	mulwf	___wmul@multiplicand^0,c
  2400  00131C  50F3               	movf	243,w,c
  2401  00131E  2606               	addwf	(___wmul@product+1)^0,f,c
  2402  001320  C005  F001         	movff	___wmul@product,?___wmul
  2403  001324  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2404  001328  0012               	return		;funcret
  2405  00132A                     __end_of___wmul:
  2406                           	callstack 0
  2407                           
  2408                           	psect	rparam
  2409  0000                     
  2410                           	psect	idloc
  2411                           
  2412                           ;Config register IDLOC0 @ 0x200000
  2413                           ;	unspecified, using default values
  2414  200000                     	org	2097152
  2415  200000  FF                 	db	255
  2416                           
  2417                           ;Config register IDLOC1 @ 0x200001
  2418                           ;	unspecified, using default values
  2419  200001                     	org	2097153
  2420  200001  FF                 	db	255
  2421                           
  2422                           ;Config register IDLOC2 @ 0x200002
  2423                           ;	unspecified, using default values
  2424  200002                     	org	2097154
  2425  200002  FF                 	db	255
  2426                           
  2427                           ;Config register IDLOC3 @ 0x200003
  2428                           ;	unspecified, using default values
  2429  200003                     	org	2097155
  2430  200003  FF                 	db	255
  2431                           
  2432                           ;Config register IDLOC4 @ 0x200004
  2433                           ;	unspecified, using default values
  2434  200004                     	org	2097156
  2435  200004  FF                 	db	255
  2436                           
  2437                           ;Config register IDLOC5 @ 0x200005
  2438                           ;	unspecified, using default values
  2439  200005                     	org	2097157
  2440  200005  FF                 	db	255
  2441                           
  2442                           ;Config register IDLOC6 @ 0x200006
  2443                           ;	unspecified, using default values
  2444  200006                     	org	2097158
  2445  200006  FF                 	db	255
  2446                           
  2447                           ;Config register IDLOC7 @ 0x200007
  2448                           ;	unspecified, using default values
  2449  200007                     	org	2097159
  2450  200007  FF                 	db	255
  2451                           
  2452                           	psect	config
  2453                           
  2454                           ;Config register CONFIG1L @ 0x300000
  2455                           ;	unspecified, using default values
  2456                           ;	PLL Prescaler Selection bits
  2457                           ;	PLLDIV = 0x0, unprogrammed default
  2458                           ;	System Clock Postscaler Selection bits
  2459                           ;	CPUDIV = 0x0, unprogrammed default
  2460                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  2461                           ;	USBDIV = 0x0, unprogrammed default
  2462  300000                     	org	3145728
  2463  300000  00                 	db	0
  2464                           
  2465                           ;Config register CONFIG1H @ 0x300001
  2466                           ;	unspecified, using default values
  2467                           ;	Oscillator Selection bits
  2468                           ;	FOSC = 0x5, unprogrammed default
  2469                           ;	Fail-Safe Clock Monitor Enable bit
  2470                           ;	FCMEN = 0x0, unprogrammed default
  2471                           ;	Internal/External Oscillator Switchover bit
  2472                           ;	IESO = 0x0, unprogrammed default
  2473  300001                     	org	3145729
  2474  300001  05                 	db	5
  2475                           
  2476                           ;Config register CONFIG2L @ 0x300002
  2477                           ;	unspecified, using default values
  2478                           ;	Power-up Timer Enable bit
  2479                           ;	PWRT = 0x1, unprogrammed default
  2480                           ;	Brown-out Reset Enable bits
  2481                           ;	BOR = 0x3, unprogrammed default
  2482                           ;	Brown-out Reset Voltage bits
  2483                           ;	BORV = 0x3, unprogrammed default
  2484                           ;	USB Voltage Regulator Enable bit
  2485                           ;	VREGEN = 0x0, unprogrammed default
  2486  300002                     	org	3145730
  2487  300002  1F                 	db	31
  2488                           
  2489                           ;Config register CONFIG2H @ 0x300003
  2490                           ;	unspecified, using default values
  2491                           ;	Watchdog Timer Enable bit
  2492                           ;	WDT = 0x1, unprogrammed default
  2493                           ;	Watchdog Timer Postscale Select bits
  2494                           ;	WDTPS = 0xF, unprogrammed default
  2495  300003                     	org	3145731
  2496  300003  1F                 	db	31
  2497                           
  2498                           ; Padding undefined space
  2499  300004                     	org	3145732
  2500  300004  FF                 	db	255
  2501                           
  2502                           ;Config register CONFIG3H @ 0x300005
  2503                           ;	unspecified, using default values
  2504                           ;	CCP2 MUX bit
  2505                           ;	CCP2MX = 0x1, unprogrammed default
  2506                           ;	PORTB A/D Enable bit
  2507                           ;	PBADEN = 0x1, unprogrammed default
  2508                           ;	Low-Power Timer 1 Oscillator Enable bit
  2509                           ;	LPT1OSC = 0x0, unprogrammed default
  2510                           ;	MCLR Pin Enable bit
  2511                           ;	MCLRE = 0x1, unprogrammed default
  2512  300005                     	org	3145733
  2513  300005  83                 	db	131
  2514                           
  2515                           ;Config register CONFIG4L @ 0x300006
  2516                           ;	unspecified, using default values
  2517                           ;	Stack Full/Underflow Reset Enable bit
  2518                           ;	STVREN = 0x1, unprogrammed default
  2519                           ;	Single-Supply ICSP Enable bit
  2520                           ;	LVP = 0x1, unprogrammed default
  2521                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  2522                           ;	ICPRT = 0x0, unprogrammed default
  2523                           ;	Extended Instruction Set Enable bit
  2524                           ;	XINST = 0x0, unprogrammed default
  2525                           ;	Background Debugger Enable bit
  2526                           ;	DEBUG = 0x1, unprogrammed default
  2527  300006                     	org	3145734
  2528  300006  85                 	db	133
  2529                           
  2530                           ; Padding undefined space
  2531  300007                     	org	3145735
  2532  300007  FF                 	db	255
  2533                           
  2534                           ;Config register CONFIG5L @ 0x300008
  2535                           ;	unspecified, using default values
  2536                           ;	Code Protection bit
  2537                           ;	CP0 = 0x1, unprogrammed default
  2538                           ;	Code Protection bit
  2539                           ;	CP1 = 0x1, unprogrammed default
  2540                           ;	Code Protection bit
  2541                           ;	CP2 = 0x1, unprogrammed default
  2542                           ;	Code Protection bit
  2543                           ;	CP3 = 0x1, unprogrammed default
  2544  300008                     	org	3145736
  2545  300008  0F                 	db	15
  2546                           
  2547                           ;Config register CONFIG5H @ 0x300009
  2548                           ;	unspecified, using default values
  2549                           ;	Boot Block Code Protection bit
  2550                           ;	CPB = 0x1, unprogrammed default
  2551                           ;	Data EEPROM Code Protection bit
  2552                           ;	CPD = 0x1, unprogrammed default
  2553  300009                     	org	3145737
  2554  300009  C0                 	db	192
  2555                           
  2556                           ;Config register CONFIG6L @ 0x30000A
  2557                           ;	unspecified, using default values
  2558                           ;	Write Protection bit
  2559                           ;	WRT0 = 0x1, unprogrammed default
  2560                           ;	Write Protection bit
  2561                           ;	WRT1 = 0x1, unprogrammed default
  2562                           ;	Write Protection bit
  2563                           ;	WRT2 = 0x1, unprogrammed default
  2564                           ;	Write Protection bit
  2565                           ;	WRT3 = 0x1, unprogrammed default
  2566  30000A                     	org	3145738
  2567  30000A  0F                 	db	15
  2568                           
  2569                           ;Config register CONFIG6H @ 0x30000B
  2570                           ;	unspecified, using default values
  2571                           ;	Configuration Register Write Protection bit
  2572                           ;	WRTC = 0x1, unprogrammed default
  2573                           ;	Boot Block Write Protection bit
  2574                           ;	WRTB = 0x1, unprogrammed default
  2575                           ;	Data EEPROM Write Protection bit
  2576                           ;	WRTD = 0x1, unprogrammed default
  2577  30000B                     	org	3145739
  2578  30000B  E0                 	db	224
  2579                           
  2580                           ;Config register CONFIG7L @ 0x30000C
  2581                           ;	unspecified, using default values
  2582                           ;	Table Read Protection bit
  2583                           ;	EBTR0 = 0x1, unprogrammed default
  2584                           ;	Table Read Protection bit
  2585                           ;	EBTR1 = 0x1, unprogrammed default
  2586                           ;	Table Read Protection bit
  2587                           ;	EBTR2 = 0x1, unprogrammed default
  2588                           ;	Table Read Protection bit
  2589                           ;	EBTR3 = 0x1, unprogrammed default
  2590  30000C                     	org	3145740
  2591  30000C  0F                 	db	15
  2592                           
  2593                           ;Config register CONFIG7H @ 0x30000D
  2594                           ;	unspecified, using default values
  2595                           ;	Boot Block Table Read Protection bit
  2596                           ;	EBTRB = 0x1, unprogrammed default
  2597  30000D                     	org	3145741
  2598  30000D  40                 	db	64
  2599                           tosu	equ	0xFFF
  2600                           tosh	equ	0xFFE
  2601                           tosl	equ	0xFFD
  2602                           stkptr	equ	0xFFC
  2603                           pclatu	equ	0xFFB
  2604                           pclath	equ	0xFFA
  2605                           pcl	equ	0xFF9
  2606                           tblptru	equ	0xFF8
  2607                           tblptrh	equ	0xFF7
  2608                           tblptrl	equ	0xFF6
  2609                           tablat	equ	0xFF5
  2610                           prodh	equ	0xFF4
  2611                           prodl	equ	0xFF3
  2612                           indf0	equ	0xFEF
  2613                           postinc0	equ	0xFEE
  2614                           postdec0	equ	0xFED
  2615                           preinc0	equ	0xFEC
  2616                           plusw0	equ	0xFEB
  2617                           fsr0h	equ	0xFEA
  2618                           fsr0l	equ	0xFE9
  2619                           wreg	equ	0xFE8
  2620                           indf1	equ	0xFE7
  2621                           postinc1	equ	0xFE6
  2622                           postdec1	equ	0xFE5
  2623                           preinc1	equ	0xFE4
  2624                           plusw1	equ	0xFE3
  2625                           fsr1h	equ	0xFE2
  2626                           fsr1l	equ	0xFE1
  2627                           bsr	equ	0xFE0
  2628                           indf2	equ	0xFDF
  2629                           postinc2	equ	0xFDE
  2630                           postdec2	equ	0xFDD
  2631                           preinc2	equ	0xFDC
  2632                           plusw2	equ	0xFDB
  2633                           fsr2h	equ	0xFDA
  2634                           fsr2l	equ	0xFD9
  2635                           status	equ	0xFD8

Data Sizes:
    Strings     60
    Constant    0
    Data        0
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      94
    BANK0           160      4      44
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S567$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S567$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_4(CODE[13]), STR_3(CODE[13]), STR_2(CODE[13]), STR_1(CODE[21]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 21
		 -> STR_4(CODE[13]), STR_3(CODE[13]), STR_2(CODE[13]), STR_1(CODE[21]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_4(CODE[13]), STR_3(CODE[13]), STR_2(CODE[13]), STR_1(CODE[21]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _abs->___aomod

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    6824
                                              0 BANK0      4     4      0
                             ___wmul
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    6331
                                             88 COMRAM     6     2      4
                             ___wmul (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    5973
                                             80 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    5619
                                             64 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4270
                                             28 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2621
                                             17 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1191
                                             10 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     790
                                              1 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     403
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___wmul
   _printf
     ___wmul (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _fputc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      25        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      4      2C       5       27.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5E       1       98.9%
BITBIGSFRhhh        50      0       0      20        0.0%
BITBIGSFRll         34      0       0      23        0.0%
BITBIGSFRhl          C      0       0      21        0.0%
BITBIGSFRlh          9      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      8A      24        0.0%
DATA                 0      0      8A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Mon May 23 17:54:29 2022

                     l22 1358                       l30 1128                       l33 1328  
                     l19 1346                       l27 1094                       l29 10A2  
    ___wmul@multiplicand 0003                      l160 0FBE                      l147 0E5A  
                    l711 1302                      l802 11C0                      l810 1266  
                    l741 1048                      l743 1084                      l751 08E6  
                    l816 12DC                      l738 1006                      l749 08DE  
                    l790 12A6                      l782 121A                      l783 1222  
                    l776 0CD2                      l769 0B1E                      l787 129E  
                    u500 1178                      u501 1174                      u510 11AE  
                    u511 11AA                      u600 0E1A                      u520 1266  
                    u601 0E16                      u521 1262                      u610 0E6E  
                    u530 12D0                      u611 0E6A                      u531 12CC  
                    u540 0CE6                      u620 0EA0                      u700 1058  
                    u541 0CE2                      u621 0E9C                      u701 1054  
                    u550 0D18                      u630 0EDE                      u710 1282  
                    u470 1354                      u551 0D14                      u631 0EDA  
                    u711 127E                      u471 1350                      u640 0F08  
                    u480 113E                      u800 0A54                      u720 086E  
                    u561 0D42                      u641 0F04                      u481 113A  
                    u801 0A50                      u721 0868                      u570 0D66  
                    u650 0F36                      u490 1150                      u810 0A6E  
                    u730 0870                      u571 0D62                      u651 0F32  
                    u491 114C                      u811 0A6A                      u580 0D90  
                    u660 0F7E                      u820 0A88                      u740 0886  
                    u900 0C54                      u581 0D8C                      u661 0F7A  
                    u821 0A84                      u741 0882                      u901 0C50  
                    u590 0DD0                      u670 0FD0                      u830 0A98  
                    u750 08B6                      u910 121A                      u591 0DCC  
                    u671 0FCC                      u831 0A94                      u751 08B2  
                    u911 1216                      u680 0FF2                      u840 0AAA  
                    u760 08D2                      u920 10A2                      u681 0FEE  
                    u841 0AA6                      u761 08CE                      u921 109E  
                    u690 1048                      u850 0ABA                      u770 0900  
                    u691 1044                      u851 0AB6                      u771 08FC  
                    u860 0AD2                      u780 090E                      u861 0ACE  
                    u781 090A                      u790 0A36                      u870 0B44  
                    u791 0A32                      u871 0B40                      u880 0B8C  
                    u881 0B88                      u890 0BB0                      u891 0BAC  
                    _abs 1268                      _pad 0FC0                      wreg 000FE8  
                   l1100 112C                     l1110 11AE                     l1102 113E  
                   l1200 0F56                     l1104 1150                     l1120 1246  
                   l1202 0F68                     l1106 115A                     l1114 1224  
                   l1122 12A8                     ?_abs 0013                     l1140 0D0A  
                   l1132 0CD4                     l1204 0F6E                     l1108 1178  
                   l1116 1230                     l1124 12B4                     l1220 0FFE  
                   l1212 0FC0                     l1300 0B20                     l1150 0D66  
                   l1142 0D18                     l1134 0CD8                     l1206 0F7E  
                   l1118 1242                     l1126 12B8                     l1230 106C  
                   l1222 1012                     l1214 0FD0                     l1310 0B8C  
                   l1302 0B44                     l1160 0DD0                     l1152 0D6E  
                   l1144 0D38                     l1136 0CE6                     l1208 0F9E  
                   l1128 12D0                     l1224 1026                     l1216 0FE4  
                   l1240 085E                     l1320 0C54                     l1312 0BB0  
                   l1304 0B52                     l1170 0E1A                     l1162 0DF0  
                   l1154 0D82                     l1146 0D3C                     l1138 0D06  
                   l1234 1268                     l1226 102A                     l1218 0FF2  
                   l1250 08D2                     l1242 0886                     l1330 0C90  
                   l1322 0C62                     l1314 0BF8                     l1306 0B64  
                   l1172 0E3A                     l1164 0DF2                     l1156 0D90  
                   l1148 0D48                     l1180 0E6E                     l1236 1282  
                   l1228 1058                     l1260 091C                     l1252 08EE  
                   l1244 08A6                     l1324 0C76                     l1308 0B68  
                   l1166 0E04                     l1158 0DA2                     l1190 0EDE  
                   l1182 0E8E                     l1270 09B8                     l1262 0924  
                   l1254 0900                     l1246 08B6                     l1238 083E  
                   l1318 0C30                     l1334 0C9C                     l1342 11C2  
                   l1350 12DE                     l1168 0E0A                     l1192 0EE6  
                   l1184 0E92                     l1176 0E5C                     l1096 1346  
                   l1280 0A88                     l1264 092A                     l1272 0A1C  
                   l1256 090E                     l1248 08B8                     l1336 0CC0  
                   l1328 0C82                     l1344 11CA                     l1352 12E6  
                   l1194 0EFA                     l1186 0EA0                     l1178 0E60  
                   l1098 1354                     l1290 0AD2                     l1274 0A36  
                   l1282 0A98                     l1266 09AC                     l1258 0914  
                   l1346 11D8                     l1370 10FE                     l1362 1086  
                   l1356 1304                     l1196 0F08                     l1188 0EC0  
                   l1292 0ADE                     l1284 0AAA                     l1276 0A54  
                   l1268 09B2                     l1348 11FE                     l1364 1092  
                   l1358 1320                     l1198 0F36                     l1294 0AE6  
                   l1286 0ABA                     l1278 0A6E                     l1366 10AA  
                   l1288 0AC0                     l1296 0AF6                     l1368 10D6  
                   ?_pad 0012                     STR_1 0801                     STR_2 0816  
                   STR_3 0823                     STR_4 0830                     abs@a 0013  
                   _dbuf 0068                     _main 1086                     _dtoa 083E  
                   _prec 0064                     _nout 0060                     pad@i 0019  
                   pad@p 0016                     fsr1h 000FE2                     fsr2h 000FDA  
                   indf2 000FDF                     fsr1l 000FE1                     pad@w 001B  
                   fsr2l 000FD9                     prodh 000FF4                     prodl 000FF3  
                   start 0000             ___param_bank 000000                    ??_abs 0015  
                  ??_pad 0018          __end_of___aodiv 0E5C                    ?_main 0001  
                  ?_dtoa 001D          __end_of___aomod 0FC0                    _RCREG 000FAE  
                  _RCSTA 000FAB             vfpfcnvrt@fmt 0043                    _SPBRG 000FAF  
                  _TXREG 000FAD                    _TXSTA 000FAC                    _flags 0066  
                  _fputc 112C                    _fputs 1224                    pad@fp 0012  
                  _width 0062                    _putch 1344                    main@a 008A  
                  dtoa@d 001F                    dtoa@i 003F                    dtoa@n 0037  
                  dtoa@p 0031                    dtoa@s 0035                    dtoa@w 0033  
                  tablat 000FF5                    status 000FD8          __initialization 132A  
           __end_of_main 112C             __end_of_dtoa 0B20                   ??_main 0088  
                 ??_dtoa 0027            __activetblptr 000001                   ?_fputc 0002  
                 ?_fputs 000B                   ?_putch 0001             vfprintf@cfmt 0057  
              ??___aodiv 0011                ??___aomod 0011                   ___wmul 1304  
                 clear_0 1330                   isa$std 000001                   _printf 12DE  
                 pad@buf 0014                   dtoa@fp 001D                   _strlen 12A8  
                 fputc@c 0002                   fputs@c 000F                   fputs@i 0010  
                 fputs@s 000B             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8                   putch@c 0001  
       __end_of_vfprintf 1224               __accesstop 0060  __end_of__initialization 1336  
          ___rparam_used 000001           __pcstackCOMRAM 0001            __end_of_fputc 11C2  
          __end_of_fputs 1268            __end_of_putch 135A                  ??_fputc 0006  
                ??_fputs 000F                  ??_putch 0001               __pbssBANK0 0060  
                ?___wmul 0001                  ?_printf 0059                  ?_strlen 0001  
                __Hparam 0000                  __Lparam 0000                  ___aodiv 0CD4  
                ___aomod 0E5C                ?_vfprintf 0051             __psmallconst 0800  
                __pcinit 132A                  __ramtop 0800                  __ptext0 1086  
                __ptext1 12DE                  __ptext2 11C2                  __ptext3 0B20  
                __ptext4 083E                  __ptext5 0FC0                  __ptext6 12A8  
                __ptext7 1224                  __ptext8 112C                  __ptext9 1344  
   end_of_initialization 1336                  fputc@fp 0004                  fputs@fp 000D  
      __end_of_vfpfcnvrt 0CD4                  postdec2 000FDD                  postinc0 000FEE  
                postinc1 000FE6                  postinc2 000FDE               ??_vfprintf 0057  
                strlen@a 0003                  strlen@s 0001                _TRISCbits 000F94  
            vfpfcnvrt@ap 0045              vfpfcnvrt@fp 0041              vfpfcnvrt@ll 0049  
         __end_of___wmul 132A           __end_of_printf 1304           __end_of_strlen 12DE  
    start_initialization 132A              __end_of_abs 12A8              __end_of_pad 1086  
            vfprintf@fmt 0053                 ??___wmul 0005                 ??_printf 005D  
               ??_strlen 0003            __pcstackBANK0 0088         ___aodiv@dividend 0001  
               ?___aodiv 0001                 ?___aomod 0001         ___aodiv@quotient 0013  
            __smallconst 0800           ___wmul@product 0005                 _PIR1bits 000F9E  
              _vfpfcnvrt 0B20        ___wmul@multiplier 0001                 __Hrparam 0000  
             vfprintf@ap 0055                 __Lrparam 0000               vfprintf@fp 0051  
           __Lsmallconst 0800               ?_vfpfcnvrt 0041          ___aodiv@divisor 0009  
        ___aodiv@counter 0011                 _dtoa$636 002F                 __ptext10 1268  
               __ptext11 0E5C                 __ptext12 0CD4                 __ptext13 1304  
               isa$xinst 000000                 _vfprintf 11C2                printf@fmt 0059  
       ___aomod@dividend 0001                 printf@ap 005D          ___aomod@divisor 0009  
            ??_vfpfcnvrt 0047          ___aomod@counter 0011             ___aodiv@sign 0012  
           ___aomod@sign 0012  
